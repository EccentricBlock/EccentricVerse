{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_player",
          "type": "address"
        }
      ],
      "name": "createInstance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_instance",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validateInstance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105208061007e6000396000f3fe60806040526004361061004a5760003560e01c8063715018a61461004f5780637726f776146100665780638da5cb5b14610096578063d38def5b146100b4578063f2fde38b146100e4575b600080fd5b34801561005b57600080fd5b50610064610104565b005b610079610074366004610333565b610118565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a257600080fd5b506000546001600160a01b0316610079565b3480156100c057600080fd5b506100d46100cf366004610357565b610178565b604051901515815260200161008d565b3480156100f057600080fd5b506100646100ff366004610333565b6101e9565b61010c610267565b61011660006102c1565b565b6000807f412076657279207374726f6e67207365637265742070617373776f7264203a29905060008160405161014d90610311565b908152602001604051809103906000f08015801561016f573d6000803e3d6000fd5b50949350505050565b600080839050806001600160a01b031663cf3090126040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e09190610390565b15949350505050565b6101f1610267565b6001600160a01b03811661025b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610264816102c1565b50565b6000546001600160a01b031633146101165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610252565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610138806103b383390190565b6001600160a01b038116811461026457600080fd5b60006020828403121561034557600080fd5b81356103508161031e565b9392505050565b6000806040838503121561036a57600080fd5b82356103758161031e565b915060208301356103858161031e565b809150509250929050565b6000602082840312156103a257600080fd5b8151801515811461035057600080fdfe608060405234801561001057600080fd5b5060405161013838038061013883398101604081905261002f91610045565b6000805460ff191660019081179091555561005e565b60006020828403121561005757600080fd5b5051919050565b60cc8061006c6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063cf309012146037578063ec9b5b3a146057575b600080fd5b60005460439060ff1681565b604051901515815260200160405180910390f35b60666062366004607e565b6068565b005b8060015403607b576000805460ff191690555b50565b600060208284031215608f57600080fd5b503591905056fea2646970667358221220ac3357a8d5e6809cedd5f058bcfe03c63b4b2a92d25ad664a92d65cddaf34a0564736f6c63430008160033a2646970667358221220dcc99d3ae8395af4a763804bb551a0b9f53fa144cfa6e7301fb63c1d65a2e75e64736f6c63430008160033",
    "sourceMap": "109:447:55:-:0;;;;;;;;;;;;-1:-1:-1;936:32:59;719:10:63;936:18:59;:32::i;:::-;109:447:55;;2433:187:59;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:59;;;-1:-1:-1;;;;;;2541:17:59;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;109:447:55:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061004a5760003560e01c8063715018a61461004f5780637726f776146100665780638da5cb5b14610096578063d38def5b146100b4578063f2fde38b146100e4575b600080fd5b34801561005b57600080fd5b50610064610104565b005b610079610074366004610333565b610118565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a257600080fd5b506000546001600160a01b0316610079565b3480156100c057600080fd5b506100d46100cf366004610357565b610178565b604051901515815260200161008d565b3480156100f057600080fd5b506100646100ff366004610333565b6101e9565b61010c610267565b61011660006102c1565b565b6000807f412076657279207374726f6e67207365637265742070617373776f7264203a29905060008160405161014d90610311565b908152602001604051809103906000f08015801561016f573d6000803e3d6000fd5b50949350505050565b600080839050806001600160a01b031663cf3090126040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e09190610390565b15949350505050565b6101f1610267565b6001600160a01b03811661025b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610264816102c1565b50565b6000546001600160a01b031633146101165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610252565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610138806103b383390190565b6001600160a01b038116811461026457600080fd5b60006020828403121561034557600080fd5b81356103508161031e565b9392505050565b6000806040838503121561036a57600080fd5b82356103758161031e565b915060208301356103858161031e565b809150509250929050565b6000602082840312156103a257600080fd5b8151801515811461035057600080fdfe608060405234801561001057600080fd5b5060405161013838038061013883398101604081905261002f91610045565b6000805460ff191660019081179091555561005e565b60006020828403121561005757600080fd5b5051919050565b60cc8061006c6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063cf309012146037578063ec9b5b3a146057575b600080fd5b60005460439060ff1681565b604051901515815260200160405180910390f35b60666062366004607e565b6068565b005b8060015403607b576000805460ff191690555b50565b600060208284031215608f57600080fd5b503591905056fea2646970667358221220ac3357a8d5e6809cedd5f058bcfe03c63b4b2a92d25ad664a92d65cddaf34a0564736f6c63430008160033a2646970667358221220dcc99d3ae8395af4a763804bb551a0b9f53fa144cfa6e7301fb63c1d65a2e75e64736f6c63430008160033",
    "sourceMap": "109:447:55:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:101:59;;;;;;;;;;;;;:::i;:::-;;145:232:55;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;566:32:67;;;548:51;;536:2;521:18;145:232:55;;;;;;;;1201:85:59;;;;;;;;;;-1:-1:-1;1247:7:59;1273:6;-1:-1:-1;;;;;1273:6:59;1201:85;;381:173:55;;;;;;;;;;-1:-1:-1;381:173:55;;;;;:::i;:::-;;:::i;:::-;;;1176:14:67;;1169:22;1151:41;;1139:2;1124:18;381:173:55;1011:187:67;2081:198:59;;;;;;;;;;-1:-1:-1;2081:198:59;;;;;:::i;:::-;;:::i;1831:101::-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;145:232:55:-;219:7;247:16;:53;;;306:14;333:8;323:19;;;;;:::i;:::-;1349:25:67;;;1337:2;1322:18;323:19:55;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;306:36:55;145:232;-1:-1:-1;;;;145:232:55:o;381:173::-;473:4;485:14;508:9;485:33;;532:8;-1:-1:-1;;;;;532:15:55;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;531:18;;381:173;-1:-1:-1;;;;381:173:55:o;2081:198:59:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:59;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:59;;1869:2:67;2161:73:59::1;::::0;::::1;1851:21:67::0;1908:2;1888:18;;;1881:30;1947:34;1927:18;;;1920:62;-1:-1:-1;;;1998:18:67;;;1991:36;2044:19;;2161:73:59::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:59;719:10:63;1422:23:59;1414:68;;;;-1:-1:-1;;;1414:68:59;;2276:2:67;1414:68:59;;;2258:21:67;;;2295:18;;;2288:30;2354:34;2334:18;;;2327:62;2406:18;;1414:68:59;2074:356:67;2433:187:59;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:59;;;-1:-1:-1;;;;;;2541:17:59;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;;:::o;14:131:67:-;-1:-1:-1;;;;;89:31:67;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:67:o;610:396::-;686:6;694;747:2;735:9;726:7;722:23;718:32;715:52;;;763:1;760;753:12;715:52;802:9;789:23;821:31;846:5;821:31;:::i;:::-;871:5;-1:-1:-1;928:2:67;913:18;;900:32;941:33;900:32;941:33;:::i;:::-;993:7;983:17;;;610:396;;;;;:::o;1385:277::-;1452:6;1505:2;1493:9;1484:7;1480:23;1476:32;1473:52;;;1521:1;1518;1511:12;1473:52;1553:9;1547:16;1606:5;1599:13;1592:21;1585:5;1582:32;1572:60;;1628:1;1625;1618:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "createInstance(address)": "7726f776",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "validateInstance(address,address)": "d38def5b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"createInstance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_instance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"validateInstance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ethernaut/contracts/levels/Level 8 - Vault/VaultFactory.sol\":\"VaultFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-06/=node_modules/openzeppelin-contracts-06/\",\":openzeppelin-contracts-08/=node_modules/openzeppelin-contracts-08/\"]},\"sources\":{\"contracts/Ethernaut/contracts/levels/Level 8 - Vault/Vault.sol\":{\"keccak256\":\"0x06d3ff8c5ff85e7fc02ebe82037cdb092762ca4ed858ef7c5118163600de8fa2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ef12cef1b7bbb4d236d145a1d13de678b1e80b240e47276537731bc6e90adc2\",\"dweb:/ipfs/QmdARsKq6D8sg1bRWvHuXPVsCsNbcmGtx4XkGkUYaJ6Zbs\"]},\"contracts/Ethernaut/contracts/levels/Level 8 - Vault/VaultFactory.sol\":{\"keccak256\":\"0x9ed1637aa961e7ccc45675f87de617280f045b3e549f72d9755842efd192cb65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c83444b1be449fa743262ae1edbd7eb24d13964cd6374060e9d7f5c3dd319169\",\"dweb:/ipfs/QmRRheMt21F9F4wHSNqbqnMz45cGufSVpLma6tvvEVgbkr\"]},\"contracts/Ethernaut/contracts/levels/base/Level.sol\":{\"keccak256\":\"0xf72fa1516c1132cc8b82b818b4ccab66578a678813758e8c4bd9c4604a2e0273\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff29a9aaa170b5999773988b330b7d457362d3c265d019ed5e99f2347dd53560\",\"dweb:/ipfs/QmVs89EPUKY9pR852gusoh2cpwUjvDAoMgzwvjdpy8Gp9A\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.22+commit.4fc1097e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_player",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createInstance",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "_instance",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validateInstance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ethereum-waffle/=node_modules/@ethereum-waffle/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-06/=node_modules/openzeppelin-contracts-06/",
        "openzeppelin-contracts-08/=node_modules/openzeppelin-contracts-08/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Ethernaut/contracts/levels/Level 8 - Vault/VaultFactory.sol": "VaultFactory"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Ethernaut/contracts/levels/Level 8 - Vault/Vault.sol": {
        "keccak256": "0x06d3ff8c5ff85e7fc02ebe82037cdb092762ca4ed858ef7c5118163600de8fa2",
        "urls": [
          "bzz-raw://5ef12cef1b7bbb4d236d145a1d13de678b1e80b240e47276537731bc6e90adc2",
          "dweb:/ipfs/QmdARsKq6D8sg1bRWvHuXPVsCsNbcmGtx4XkGkUYaJ6Zbs"
        ],
        "license": "MIT"
      },
      "contracts/Ethernaut/contracts/levels/Level 8 - Vault/VaultFactory.sol": {
        "keccak256": "0x9ed1637aa961e7ccc45675f87de617280f045b3e549f72d9755842efd192cb65",
        "urls": [
          "bzz-raw://c83444b1be449fa743262ae1edbd7eb24d13964cd6374060e9d7f5c3dd319169",
          "dweb:/ipfs/QmRRheMt21F9F4wHSNqbqnMz45cGufSVpLma6tvvEVgbkr"
        ],
        "license": "MIT"
      },
      "contracts/Ethernaut/contracts/levels/base/Level.sol": {
        "keccak256": "0xf72fa1516c1132cc8b82b818b4ccab66578a678813758e8c4bd9c4604a2e0273",
        "urls": [
          "bzz-raw://ff29a9aaa170b5999773988b330b7d457362d3c265d019ed5e99f2347dd53560",
          "dweb:/ipfs/QmVs89EPUKY9pR852gusoh2cpwUjvDAoMgzwvjdpy8Gp9A"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Ethernaut/contracts/levels/Level 8 - Vault/VaultFactory.sol",
    "id": 5863,
    "exportedSymbols": {
      "Context": [
        6868
      ],
      "Level": [
        6044
      ],
      "Ownable": [
        6157
      ],
      "Vault": [
        5803
      ],
      "VaultFactory": [
        5862
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:524:55",
    "nodes": [
      {
        "id": 5805,
        "nodeType": "PragmaDirective",
        "src": "33:23:55",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 5806,
        "nodeType": "ImportDirective",
        "src": "58:27:55",
        "nodes": [],
        "absolutePath": "contracts/Ethernaut/contracts/levels/base/Level.sol",
        "file": "../base/Level.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5863,
        "sourceUnit": 6045,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5807,
        "nodeType": "ImportDirective",
        "src": "86:21:55",
        "nodes": [],
        "absolutePath": "contracts/Ethernaut/contracts/levels/Level 8 - Vault/Vault.sol",
        "file": "./Vault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5863,
        "sourceUnit": 5804,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5862,
        "nodeType": "ContractDefinition",
        "src": "109:447:55",
        "nodes": [
          {
            "id": 5838,
            "nodeType": "FunctionDefinition",
            "src": "145:232:55",
            "nodes": [],
            "body": {
              "id": 5837,
              "nodeType": "Block",
              "src": "228:149:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5817,
                    "name": "_player",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5811,
                    "src": "234:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5818,
                  "nodeType": "ExpressionStatement",
                  "src": "234:7:55"
                },
                {
                  "assignments": [
                    5820
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5820,
                      "mutability": "mutable",
                      "name": "password",
                      "nameLocation": "255:8:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 5837,
                      "src": "247:16:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 5819,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "247:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5822,
                  "initialValue": {
                    "hexValue": "412076657279207374726f6e67207365637265742070617373776f7264203a29",
                    "id": 5821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "266:34:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bf7beae9e8d8f78c3f0da5a4b24a4866e862d83b9b687570197492967d86fec4",
                      "typeString": "literal_string \"A very strong secret password :)\""
                    },
                    "value": "A very strong secret password :)"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "247:53:55"
                },
                {
                  "assignments": [
                    5825
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5825,
                      "mutability": "mutable",
                      "name": "instance",
                      "nameLocation": "312:8:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 5837,
                      "src": "306:14:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vault_$5803",
                        "typeString": "contract Vault"
                      },
                      "typeName": {
                        "id": 5824,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5823,
                          "name": "Vault",
                          "nameLocations": [
                            "306:5:55"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5803,
                          "src": "306:5:55"
                        },
                        "referencedDeclaration": 5803,
                        "src": "306:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$5803",
                          "typeString": "contract Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5831,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5829,
                        "name": "password",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5820,
                        "src": "333:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 5828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "323:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_bytes32_$returns$_t_contract$_Vault_$5803_$",
                        "typeString": "function (bytes32) returns (contract Vault)"
                      },
                      "typeName": {
                        "id": 5827,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5826,
                          "name": "Vault",
                          "nameLocations": [
                            "327:5:55"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5803,
                          "src": "327:5:55"
                        },
                        "referencedDeclaration": 5803,
                        "src": "327:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$5803",
                          "typeString": "contract Vault"
                        }
                      }
                    },
                    "id": 5830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "323:19:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Vault_$5803",
                      "typeString": "contract Vault"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "306:36:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5834,
                        "name": "instance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5825,
                        "src": "363:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$5803",
                          "typeString": "contract Vault"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Vault_$5803",
                          "typeString": "contract Vault"
                        }
                      ],
                      "id": 5833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "355:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 5832,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "355:7:55",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 5835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "355:17:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5816,
                  "id": 5836,
                  "nodeType": "Return",
                  "src": "348:24:55"
                }
              ]
            },
            "baseFunctions": [
              6034
            ],
            "functionSelector": "7726f776",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createInstance",
            "nameLocation": "154:14:55",
            "overrides": {
              "id": 5813,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "186:8:55"
            },
            "parameters": {
              "id": 5812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5811,
                  "mutability": "mutable",
                  "name": "_player",
                  "nameLocation": "177:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 5838,
                  "src": "169:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5810,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "169:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "168:17:55"
            },
            "returnParameters": {
              "id": 5816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5815,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5838,
                  "src": "219:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "219:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "218:9:55"
            },
            "scope": 5862,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5861,
            "nodeType": "FunctionDefinition",
            "src": "381:173:55",
            "nodes": [],
            "body": {
              "id": 5860,
              "nodeType": "Block",
              "src": "479:75:55",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    5850
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5850,
                      "mutability": "mutable",
                      "name": "instance",
                      "nameLocation": "491:8:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 5860,
                      "src": "485:14:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vault_$5803",
                        "typeString": "contract Vault"
                      },
                      "typeName": {
                        "id": 5849,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5848,
                          "name": "Vault",
                          "nameLocations": [
                            "485:5:55"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5803,
                          "src": "485:5:55"
                        },
                        "referencedDeclaration": 5803,
                        "src": "485:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$5803",
                          "typeString": "contract Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5854,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5852,
                        "name": "_instance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5840,
                        "src": "508:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 5851,
                      "name": "Vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5803,
                      "src": "502:5:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Vault_$5803_$",
                        "typeString": "type(contract Vault)"
                      }
                    },
                    "id": 5853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "502:16:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Vault_$5803",
                      "typeString": "contract Vault"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "485:33:55"
                },
                {
                  "expression": {
                    "id": 5858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "531:18:55",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 5855,
                          "name": "instance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5850,
                          "src": "532:8:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vault_$5803",
                            "typeString": "contract Vault"
                          }
                        },
                        "id": 5856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "541:6:55",
                        "memberName": "locked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5771,
                        "src": "532:15:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                          "typeString": "function () view external returns (bool)"
                        }
                      },
                      "id": 5857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "532:17:55",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5847,
                  "id": 5859,
                  "nodeType": "Return",
                  "src": "524:25:55"
                }
              ]
            },
            "baseFunctions": [
              6043
            ],
            "functionSelector": "d38def5b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateInstance",
            "nameLocation": "390:16:55",
            "overrides": {
              "id": 5844,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "443:8:55"
            },
            "parameters": {
              "id": 5843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5840,
                  "mutability": "mutable",
                  "name": "_instance",
                  "nameLocation": "423:9:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 5861,
                  "src": "407:25:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "407:15:55",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5842,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5861,
                  "src": "434:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "406:36:55"
            },
            "returnParameters": {
              "id": 5847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5846,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5861,
                  "src": "473:4:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5845,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "472:6:55"
            },
            "scope": 5862,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5808,
              "name": "Level",
              "nameLocations": [
                "134:5:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6044,
              "src": "134:5:55"
            },
            "id": 5809,
            "nodeType": "InheritanceSpecifier",
            "src": "134:5:55"
          }
        ],
        "canonicalName": "VaultFactory",
        "contractDependencies": [
          5803
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5862,
          6044,
          6157,
          6868
        ],
        "name": "VaultFactory",
        "nameLocation": "118:12:55",
        "scope": 5863,
        "usedErrors": [],
        "usedEvents": [
          6058
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 55
}