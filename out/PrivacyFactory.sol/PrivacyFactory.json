{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "createInstance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_instance",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validateInstance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61073a8061007e6000396000f3fe60806040526004361061004a5760003560e01c8063715018a61461004f5780637726f776146100665780638da5cb5b14610096578063d38def5b146100b4578063f2fde38b146100e4575b600080fd5b34801561005b57600080fd5b50610064610104565b005b6100796100743660046103da565b610118565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a257600080fd5b506000546001600160a01b0316610079565b3480156100c057600080fd5b506100d46100cf3660046103fe565b610201565b604051901515815260200161008d565b3480156100f057600080fd5b506100646100ff3660046103da565b610272565b61010c6102f0565b610116600061034a565b565b600061012261039a565b604080513260601b6bffffffffffffffffffffffff19166020808301829052600360fc1b60348085019190915284516015818603810182526035958601875281519184019190912087528551808401859052603160f81b81840152865180820383018152908601875280519084012087840152855180840194909452601960f91b91840191909152845180840390910181529190920183528051910120828201525160009082906101d2906103b8565b6101dc9190610437565b604051809103906000f0801580156101f8573d6000803e3d6000fd5b50949350505050565b600080839050806001600160a01b031663cf3090126040518163ffffffff1660e01b8152600401602060405180830381865afa158015610245573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102699190610468565b15949350505050565b61027a6102f0565b6001600160a01b0381166102e45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6102ed8161034a565b50565b6000546001600160a01b031633146101165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405180606001604052806003906020820280368337509192915050565b61027a8061048b83390190565b6001600160a01b03811681146102ed57600080fd5b6000602082840312156103ec57600080fd5b81356103f7816103c5565b9392505050565b6000806040838503121561041157600080fd5b823561041c816103c5565b9150602083013561042c816103c5565b809150509250929050565b60608101818360005b600381101561045f578151835260209283019290910190600101610440565b50505092915050565b60006020828403121561047a57600080fd5b815180151581146103f757600080fdfe60806040526000805460ff1916600190811790915542908190556002805461ffff909216620100000263ffffffff199092169190911761ff0a17905534801561004757600080fd5b5060405161027a38038061027a833981016040819052610066916100cc565b61007260038281610079565b5050610157565b82600381019282156100a7579160200282015b828111156100a757825182559160200191906001019061008c565b506100b39291506100b7565b5090565b5b808211156100b357600081556001016100b8565b6000606082840312156100de57600080fd5b82601f8301126100ed57600080fd5b604051606081016001600160401b038111828210171561011d57634e487b7160e01b600052604160045260246000fd5b60405280606084018581111561013257600080fd5b845b8181101561014c578051835260209283019201610134565b509195945050505050565b610114806101666000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c8063b3cea217146041578063cf30901214605c578063e1afb08c146077575b600080fd5b604960015481565b6040519081526020015b60405180910390f35b60005460689060ff1681565b60405190151581526020016053565b6086608236600460af565b6088565b005b6005546001600160801b031982811691161460a257600080fd5b506000805460ff19169055565b60006020828403121560c057600080fd5b81356001600160801b03198116811460d757600080fd5b939250505056fea2646970667358221220786fe46b023516d5ad232b6315b718b5071d0c735671445e53dd6cb403c294cc64736f6c63430008160033a2646970667358221220d5bf73dff23f76b81429e030d8a22608ced8addeb45af64023cb180f6b12129064736f6c63430008160033",
    "sourceMap": "111:583:9:-:0;;;;;;;;;;;;-1:-1:-1;936:32:59;719:10:63;936:18:59;:32::i;:::-;111:583:9;;2433:187:59;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:59;;;-1:-1:-1;;;;;;2541:17:59;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;111:583:9:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061004a5760003560e01c8063715018a61461004f5780637726f776146100665780638da5cb5b14610096578063d38def5b146100b4578063f2fde38b146100e4575b600080fd5b34801561005b57600080fd5b50610064610104565b005b6100796100743660046103da565b610118565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a257600080fd5b506000546001600160a01b0316610079565b3480156100c057600080fd5b506100d46100cf3660046103fe565b610201565b604051901515815260200161008d565b3480156100f057600080fd5b506100646100ff3660046103da565b610272565b61010c6102f0565b610116600061034a565b565b600061012261039a565b604080513260601b6bffffffffffffffffffffffff19166020808301829052600360fc1b60348085019190915284516015818603810182526035958601875281519184019190912087528551808401859052603160f81b81840152865180820383018152908601875280519084012087840152855180840194909452601960f91b91840191909152845180840390910181529190920183528051910120828201525160009082906101d2906103b8565b6101dc9190610437565b604051809103906000f0801580156101f8573d6000803e3d6000fd5b50949350505050565b600080839050806001600160a01b031663cf3090126040518163ffffffff1660e01b8152600401602060405180830381865afa158015610245573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102699190610468565b15949350505050565b61027a6102f0565b6001600160a01b0381166102e45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6102ed8161034a565b50565b6000546001600160a01b031633146101165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405180606001604052806003906020820280368337509192915050565b61027a8061048b83390190565b6001600160a01b03811681146102ed57600080fd5b6000602082840312156103ec57600080fd5b81356103f7816103c5565b9392505050565b6000806040838503121561041157600080fd5b823561041c816103c5565b9150602083013561042c816103c5565b809150509250929050565b60608101818360005b600381101561045f578151835260209283019290910190600101610440565b50505092915050565b60006020828403121561047a57600080fd5b815180151581146103f757600080fdfe60806040526000805460ff1916600190811790915542908190556002805461ffff909216620100000263ffffffff199092169190911761ff0a17905534801561004757600080fd5b5060405161027a38038061027a833981016040819052610066916100cc565b61007260038281610079565b5050610157565b82600381019282156100a7579160200282015b828111156100a757825182559160200191906001019061008c565b506100b39291506100b7565b5090565b5b808211156100b357600081556001016100b8565b6000606082840312156100de57600080fd5b82601f8301126100ed57600080fd5b604051606081016001600160401b038111828210171561011d57634e487b7160e01b600052604160045260246000fd5b60405280606084018581111561013257600080fd5b845b8181101561014c578051835260209283019201610134565b509195945050505050565b610114806101666000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c8063b3cea217146041578063cf30901214605c578063e1afb08c146077575b600080fd5b604960015481565b6040519081526020015b60405180910390f35b60005460689060ff1681565b60405190151581526020016053565b6086608236600460af565b6088565b005b6005546001600160801b031982811691161460a257600080fd5b506000805460ff19169055565b60006020828403121560c057600080fd5b81356001600160801b03198116811460d757600080fd5b939250505056fea2646970667358221220786fe46b023516d5ad232b6315b718b5071d0c735671445e53dd6cb403c294cc64736f6c63430008160033a2646970667358221220d5bf73dff23f76b81429e030d8a22608ced8addeb45af64023cb180f6b12129064736f6c63430008160033",
    "sourceMap": "111:583:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:101:59;;;;;;;;;;;;;:::i;:::-;;149:354:9;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;566:32:67;;;548:51;;536:2;521:18;149:354:9;;;;;;;;1201:85:59;;;;;;;;;;-1:-1:-1;1247:7:59;1273:6;-1:-1:-1;;;;;1273:6:59;1201:85;;507:185:9;;;;;;;;;;-1:-1:-1;507:185:9;;;;;:::i;:::-;;:::i;:::-;;;1176:14:67;;1169:22;1151:41;;1139:2;1124:18;507:185:9;1011:187:67;2081:198:59;;;;;;;;;;-1:-1:-1;2081:198:59;;;;;:::i;:::-;;:::i;1831:101::-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;149:354:9:-;215:7;230:22;;:::i;:::-;278:31;;;295:9;1453:2:67;1449:15;-1:-1:-1;;1445:53:67;278:31:9;;;;1433:66:67;;;-1:-1:-1;;;1515:12:67;;;;1508:25;;;;278:31:9;;;;;;;;;;1549:12:67;;;;278:31:9;;268:42;;;;;;;;;258:52;;336:31;;;;;1934:66:67;;;-1:-1:-1;;;2016:12:67;;;2009:25;336:31:9;;;;;;;;;2050:12:67;;;336:31:9;;326:42;;;;;;316:7;;;:52;394:31;;;;;2303:66:67;;;;-1:-1:-1;;;2385:12:67;;;2378:25;;;;394:31:9;;;;;;;;;;2419:12:67;;;;394:31:9;;384:42;;;;;374:7;;;:52;451:17;-1:-1:-1;;258:52:9;;451:17;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;432:36:9;149:354;-1:-1:-1;;;;149:354:9:o;507:185::-;599:4;611:16;638:9;611:37;;661:8;-1:-1:-1;;;;;661:15:9;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;507:185;-1:-1:-1;;;;507:185:9:o;2081:198:59:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:59;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:59;;3425:2:67;2161:73:59::1;::::0;::::1;3407:21:67::0;3464:2;3444:18;;;3437:30;3503:34;3483:18;;;3476:62;-1:-1:-1;;;3554:18:67;;;3547:36;3600:19;;2161:73:59::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:59;719:10:63;1422:23:59;1414:68;;;;-1:-1:-1;;;1414:68:59;;3832:2:67;1414:68:59;;;3814:21:67;;;3851:18;;;3844:30;3910:34;3890:18;;;3883:62;3962:18;;1414:68:59;3630:356:67;2433:187:59;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:59;;;-1:-1:-1;;;;;;2541:17:59;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;14:131:67:-;-1:-1:-1;;;;;89:31:67;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:67:o;610:396::-;686:6;694;747:2;735:9;726:7;722:23;718:32;715:52;;;763:1;760;753:12;715:52;802:9;789:23;821:31;846:5;821:31;:::i;:::-;871:5;-1:-1:-1;928:2:67;913:18;;900:32;941:33;900:32;941:33;:::i;:::-;993:7;983:17;;;610:396;;;;;:::o;2442:494::-;2622:2;2607:18;;2611:9;2702:6;2580:4;2736:194;2750:4;2747:1;2744:11;2736:194;;;2809:13;;2797:26;;2846:4;2870:12;;;;2905:15;;;;2770:1;2763:9;2736:194;;;2740:3;;;2442:494;;;;:::o;2941:277::-;3008:6;3061:2;3049:9;3040:7;3036:23;3032:32;3029:52;;;3077:1;3074;3067:12;3029:52;3109:9;3103:16;3162:5;3155:13;3148:21;3141:5;3138:32;3128:60;;3184:1;3181;3174:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "createInstance(address)": "7726f776",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "validateInstance(address,address)": "d38def5b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"createInstance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_instance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"validateInstance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ethernaut/contracts/levels/Level 12 - Privacy/PrivacyFactory.sol\":\"PrivacyFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-06/=node_modules/openzeppelin-contracts-06/\",\":openzeppelin-contracts-08/=node_modules/openzeppelin-contracts-08/\"]},\"sources\":{\"contracts/Ethernaut/contracts/levels/Level 12 - Privacy/Privacy.sol\":{\"keccak256\":\"0x98c1829e0006a67d8cd75a06ee35b5a0b884bf6056999fd14ab70478bcf7ae01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb61517014c53946fbbfce27df28dbc07968963bcf613af54de6663e4e74812f\",\"dweb:/ipfs/QmZ1unqyJn9dZiVUnRzVcFJEcLPVwXxiHhEhwPG9UGusP2\"]},\"contracts/Ethernaut/contracts/levels/Level 12 - Privacy/PrivacyFactory.sol\":{\"keccak256\":\"0x585c2c6dea896b0754a0195ff0f2756a26d1484b5bbf341dc75e4b6ffe69197a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e26c887d6ee82f0083c90753a40455041127e158ff0c832ed8df265b996ffcb\",\"dweb:/ipfs/QmXM7Ktk1wHLwoG4pU4TU3GGJBfynUkNozbctfFHwxq9Jz\"]},\"contracts/Ethernaut/contracts/levels/base/Level.sol\":{\"keccak256\":\"0xf72fa1516c1132cc8b82b818b4ccab66578a678813758e8c4bd9c4604a2e0273\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff29a9aaa170b5999773988b330b7d457362d3c265d019ed5e99f2347dd53560\",\"dweb:/ipfs/QmVs89EPUKY9pR852gusoh2cpwUjvDAoMgzwvjdpy8Gp9A\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.22+commit.4fc1097e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createInstance",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "_instance",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validateInstance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ethereum-waffle/=node_modules/@ethereum-waffle/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-06/=node_modules/openzeppelin-contracts-06/",
        "openzeppelin-contracts-08/=node_modules/openzeppelin-contracts-08/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Ethernaut/contracts/levels/Level 12 - Privacy/PrivacyFactory.sol": "PrivacyFactory"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Ethernaut/contracts/levels/Level 12 - Privacy/Privacy.sol": {
        "keccak256": "0x98c1829e0006a67d8cd75a06ee35b5a0b884bf6056999fd14ab70478bcf7ae01",
        "urls": [
          "bzz-raw://eb61517014c53946fbbfce27df28dbc07968963bcf613af54de6663e4e74812f",
          "dweb:/ipfs/QmZ1unqyJn9dZiVUnRzVcFJEcLPVwXxiHhEhwPG9UGusP2"
        ],
        "license": "MIT"
      },
      "contracts/Ethernaut/contracts/levels/Level 12 - Privacy/PrivacyFactory.sol": {
        "keccak256": "0x585c2c6dea896b0754a0195ff0f2756a26d1484b5bbf341dc75e4b6ffe69197a",
        "urls": [
          "bzz-raw://9e26c887d6ee82f0083c90753a40455041127e158ff0c832ed8df265b996ffcb",
          "dweb:/ipfs/QmXM7Ktk1wHLwoG4pU4TU3GGJBfynUkNozbctfFHwxq9Jz"
        ],
        "license": "MIT"
      },
      "contracts/Ethernaut/contracts/levels/base/Level.sol": {
        "keccak256": "0xf72fa1516c1132cc8b82b818b4ccab66578a678813758e8c4bd9c4604a2e0273",
        "urls": [
          "bzz-raw://ff29a9aaa170b5999773988b330b7d457362d3c265d019ed5e99f2347dd53560",
          "dweb:/ipfs/QmVs89EPUKY9pR852gusoh2cpwUjvDAoMgzwvjdpy8Gp9A"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Ethernaut/contracts/levels/Level 12 - Privacy/PrivacyFactory.sol",
    "id": 914,
    "exportedSymbols": {
      "Context": [
        6868
      ],
      "Level": [
        6044
      ],
      "Ownable": [
        6157
      ],
      "Privacy": [
        813
      ],
      "PrivacyFactory": [
        913
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:662:9",
    "nodes": [
      {
        "id": 815,
        "nodeType": "PragmaDirective",
        "src": "33:23:9",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 816,
        "nodeType": "ImportDirective",
        "src": "58:27:9",
        "nodes": [],
        "absolutePath": "contracts/Ethernaut/contracts/levels/base/Level.sol",
        "file": "../base/Level.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 914,
        "sourceUnit": 6045,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 817,
        "nodeType": "ImportDirective",
        "src": "86:23:9",
        "nodes": [],
        "absolutePath": "contracts/Ethernaut/contracts/levels/Level 12 - Privacy/Privacy.sol",
        "file": "./Privacy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 914,
        "sourceUnit": 814,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 913,
        "nodeType": "ContractDefinition",
        "src": "111:583:9",
        "nodes": [
          {
            "id": 888,
            "nodeType": "FunctionDefinition",
            "src": "149:354:9",
            "nodes": [],
            "body": {
              "id": 887,
              "nodeType": "Block",
              "src": "224:279:9",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    832
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 832,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "248:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 887,
                      "src": "230:22:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$3_memory_ptr",
                        "typeString": "bytes32[3]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 830,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "230:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 831,
                        "length": {
                          "hexValue": "33",
                          "id": 829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "238:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "230:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$3_storage_ptr",
                          "typeString": "bytes32[3]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 833,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "230:22:9"
                },
                {
                  "expression": {
                    "id": 845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 834,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 832,
                        "src": "258:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$3_memory_ptr",
                          "typeString": "bytes32[3] memory"
                        }
                      },
                      "id": 836,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "263:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "258:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 840,
                                "name": "tx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -26,
                                "src": "295:2:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_transaction",
                                  "typeString": "tx"
                                }
                              },
                              "id": 841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "298:6:9",
                              "memberName": "origin",
                              "nodeType": "MemberAccess",
                              "src": "295:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "305:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                "typeString": "literal_string \"0\""
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                "typeString": "literal_string \"0\""
                              }
                            ],
                            "expression": {
                              "id": 838,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "278:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "282:12:9",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "278:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "278:31:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 837,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "268:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "268:42:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "258:52:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 846,
                  "nodeType": "ExpressionStatement",
                  "src": "258:52:9"
                },
                {
                  "expression": {
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 847,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 832,
                        "src": "316:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$3_memory_ptr",
                          "typeString": "bytes32[3] memory"
                        }
                      },
                      "id": 849,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "321:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "316:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 853,
                                "name": "tx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -26,
                                "src": "353:2:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_transaction",
                                  "typeString": "tx"
                                }
                              },
                              "id": 854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "356:6:9",
                              "memberName": "origin",
                              "nodeType": "MemberAccess",
                              "src": "353:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "363:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                "typeString": "literal_string \"1\""
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                "typeString": "literal_string \"1\""
                              }
                            ],
                            "expression": {
                              "id": 851,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "336:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "340:12:9",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "336:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "336:31:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 850,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "326:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "326:42:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "316:52:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 859,
                  "nodeType": "ExpressionStatement",
                  "src": "316:52:9"
                },
                {
                  "expression": {
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 860,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 832,
                        "src": "374:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$3_memory_ptr",
                          "typeString": "bytes32[3] memory"
                        }
                      },
                      "id": 862,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "379:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "374:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 866,
                                "name": "tx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -26,
                                "src": "411:2:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_transaction",
                                  "typeString": "tx"
                                }
                              },
                              "id": 867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "414:6:9",
                              "memberName": "origin",
                              "nodeType": "MemberAccess",
                              "src": "411:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "421:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a5",
                                "typeString": "literal_string \"2\""
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a5",
                                "typeString": "literal_string \"2\""
                              }
                            ],
                            "expression": {
                              "id": 864,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "394:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "398:12:9",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "394:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "394:31:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 863,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "384:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "384:42:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "374:52:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 872,
                  "nodeType": "ExpressionStatement",
                  "src": "374:52:9"
                },
                {
                  "assignments": [
                    875
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 875,
                      "mutability": "mutable",
                      "name": "instance",
                      "nameLocation": "440:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 887,
                      "src": "432:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Privacy_$813",
                        "typeString": "contract Privacy"
                      },
                      "typeName": {
                        "id": 874,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 873,
                          "name": "Privacy",
                          "nameLocations": [
                            "432:7:9"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 813,
                          "src": "432:7:9"
                        },
                        "referencedDeclaration": 813,
                        "src": "432:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Privacy_$813",
                          "typeString": "contract Privacy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 881,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 879,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 832,
                        "src": "463:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$3_memory_ptr",
                          "typeString": "bytes32[3] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$3_memory_ptr",
                          "typeString": "bytes32[3] memory"
                        }
                      ],
                      "id": 878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "451:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_array$_t_bytes32_$3_memory_ptr_$returns$_t_contract$_Privacy_$813_$",
                        "typeString": "function (bytes32[3] memory) returns (contract Privacy)"
                      },
                      "typeName": {
                        "id": 877,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 876,
                          "name": "Privacy",
                          "nameLocations": [
                            "455:7:9"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 813,
                          "src": "455:7:9"
                        },
                        "referencedDeclaration": 813,
                        "src": "455:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Privacy_$813",
                          "typeString": "contract Privacy"
                        }
                      }
                    },
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "451:17:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Privacy_$813",
                      "typeString": "contract Privacy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "432:36:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 884,
                        "name": "instance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 875,
                        "src": "489:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Privacy_$813",
                          "typeString": "contract Privacy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Privacy_$813",
                          "typeString": "contract Privacy"
                        }
                      ],
                      "id": 883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "481:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 882,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "481:7:9",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "481:17:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 826,
                  "id": 886,
                  "nodeType": "Return",
                  "src": "474:24:9"
                }
              ]
            },
            "baseFunctions": [
              6034
            ],
            "functionSelector": "7726f776",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createInstance",
            "nameLocation": "158:14:9",
            "overrides": {
              "id": 823,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "182:8:9"
            },
            "parameters": {
              "id": 822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 821,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "173:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 820,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "173:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "172:9:9"
            },
            "returnParameters": {
              "id": 826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "215:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "215:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "214:9:9"
            },
            "scope": 913,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 912,
            "nodeType": "FunctionDefinition",
            "src": "507:185:9",
            "nodes": [],
            "body": {
              "id": 911,
              "nodeType": "Block",
              "src": "605:87:9",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    900
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 900,
                      "mutability": "mutable",
                      "name": "instance",
                      "nameLocation": "619:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 911,
                      "src": "611:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Privacy_$813",
                        "typeString": "contract Privacy"
                      },
                      "typeName": {
                        "id": 899,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 898,
                          "name": "Privacy",
                          "nameLocations": [
                            "611:7:9"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 813,
                          "src": "611:7:9"
                        },
                        "referencedDeclaration": 813,
                        "src": "611:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Privacy_$813",
                          "typeString": "contract Privacy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 904,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 902,
                        "name": "_instance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 890,
                        "src": "638:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 901,
                      "name": "Privacy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 813,
                      "src": "630:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Privacy_$813_$",
                        "typeString": "type(contract Privacy)"
                      }
                    },
                    "id": 903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "630:18:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Privacy_$813",
                      "typeString": "contract Privacy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "611:37:9"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 905,
                          "name": "instance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 900,
                          "src": "661:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Privacy_$813",
                            "typeString": "contract Privacy"
                          }
                        },
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "670:6:9",
                        "memberName": "locked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 758,
                        "src": "661:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                          "typeString": "function () view external returns (bool)"
                        }
                      },
                      "id": 907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "661:17:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "682:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "661:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 897,
                  "id": 910,
                  "nodeType": "Return",
                  "src": "654:33:9"
                }
              ]
            },
            "baseFunctions": [
              6043
            ],
            "functionSelector": "d38def5b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateInstance",
            "nameLocation": "516:16:9",
            "overrides": {
              "id": 894,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "569:8:9"
            },
            "parameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "_instance",
                  "nameLocation": "549:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 912,
                  "src": "533:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:15:9",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 912,
                  "src": "560:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "532:36:9"
            },
            "returnParameters": {
              "id": 897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 896,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 912,
                  "src": "599:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 895,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "598:6:9"
            },
            "scope": 913,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 818,
              "name": "Level",
              "nameLocations": [
                "138:5:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6044,
              "src": "138:5:9"
            },
            "id": 819,
            "nodeType": "InheritanceSpecifier",
            "src": "138:5:9"
          }
        ],
        "canonicalName": "PrivacyFactory",
        "contractDependencies": [
          813
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          913,
          6044,
          6157,
          6868
        ],
        "name": "PrivacyFactory",
        "nameLocation": "120:14:9",
        "scope": 914,
        "usedErrors": [],
        "usedEvents": [
          6058
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 9
}