{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract CryptoVault",
          "name": "cryptoVault",
          "type": "address"
        },
        {
          "internalType": "contract DoubleEntryPoint",
          "name": "instance",
          "type": "address"
        }
      ],
      "name": "__trySweep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_player",
          "type": "address"
        }
      ],
      "name": "createInstance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_instance",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_player",
          "type": "address"
        }
      ],
      "name": "validateInstance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6134a38061007e6000396000f3fe6080604052600436106200005c5760003560e01c8063715018a614620000615780637726f776146200007b5780638da5cb5b14620000af578063d38def5b14620000cf578063f2fde38b1462000105578063fae99eae146200012a575b600080fd5b3480156200006e57600080fd5b50620000796200015f565b005b620000926200008c36600462000970565b62000177565b6040516001600160a01b0390911681526020015b60405180910390f35b348015620000bc57600080fd5b506000546001600160a01b031662000092565b348015620000dc57600080fd5b50620000f4620000ee36600462000997565b620003a6565b6040519015158152602001620000a6565b3480156200011257600080fd5b50620000796200012436600462000970565b62000600565b3480156200013757600080fd5b506200014f6200014936600462000997565b6200067f565b604051620000a6929190620009fb565b6200016962000876565b620001756000620008d2565b565b600080604051620001889062000922565b604051809103906000f080158015620001a5573d6000803e3d6000fd5b5090506000604051620001b89062000930565b604051809103906000f080158015620001d5573d6000803e3d6000fd5b509050600084604051620001e9906200093e565b6001600160a01b039091168152602001604051809103906000f08015801562000216573d6000803e3d6000fd5b5090506000838284886040516200022d906200094c565b6001600160a01b039485168152928416602084015290831660408301529091166060820152608001604051809103906000f08015801562000272573d6000803e3d6000fd5b5060405163bdb2321f60e01b81526001600160a01b0380831660048301529192509083169063bdb2321f90602401600060405180830381600087803b158015620002bb57600080fd5b505af1158015620002d0573d6000803e3d6000fd5b505060405162074b6160ea1b81526001600160a01b03848116600483015287169250631d2d84009150602401600060405180830381600087803b1580156200031757600080fd5b505af11580156200032c573d6000803e3d6000fd5b50506040516340c10f1960e01b81526001600160a01b03858116600483015268056bc75e2d631000006024830152871692506340c10f199150604401600060405180830381600087803b1580156200038357600080fd5b505af115801562000398573d6000803e3d6000fd5b509298975050505050505050565b6000808390506000816001600160a01b031663d8670e1f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620003ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000413919062000a39565b604051634f0841e560e11b81526001600160a01b038681166004830152919250600091831690639e1083ca90602401602060405180830381865afa15801562000460573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000486919062000a39565b90506001600160a01b038116620004a45760009350505050620005fa565b6000836001600160a01b031663d444d8a06040518163ffffffff1660e01b8152600401602060405180830381865afa158015620004e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200050b919062000a39565b604051637d74cf5760e11b81526001600160a01b0380831660048301528616602482015290915081906000908190309063fae99eae906044016000604051808303816000875af115801562000564573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200058e919081019062000a85565b915091508115620005d75760405162461bcd60e51b815260206004820152600e60248201526d14ddd9595c081cdd58d8d959195960921b60448201526064015b60405180910390fd5b600081806020019051810190620005ef919062000b53565b985050505050505050505b92915050565b6200060a62000876565b6001600160a01b038116620006715760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620005ce565b6200067c81620008d2565b50565b60006060836001600160a01b0316631be19560846001600160a01b03166326fe99516040518163ffffffff1660e01b8152600401602060405180830381865afa158015620006d1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006f7919062000a39565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200073957600080fd5b505af19250505080156200074b575060015b6200085a57600080846001600160a01b03166370a08231866001600160a01b031663d444d8a06040518163ffffffff1660e01b8152600401602060405180830381865afa158015620007a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007c7919062000a39565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200080c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000832919062000b71565b60408051929091116020830152015b604051602081830303815290604052915091506200086f565b60408051600060208201526001910162000841565b9250929050565b6000546001600160a01b03163314620001755760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620005ce565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610eeb8062000b8c83390190565b6103998062001a7783390190565b6103b18062001e1083390190565b6112ad80620021c183390190565b6001600160a01b03811681146200067c57600080fd5b6000602082840312156200098357600080fd5b813562000990816200095a565b9392505050565b60008060408385031215620009ab57600080fd5b8235620009b8816200095a565b91506020830135620009ca816200095a565b809150509250929050565b60005b83811015620009f2578181015183820152602001620009d8565b50506000910152565b8215158152604060208201526000825180604084015262000a24816060850160208701620009d5565b601f01601f1916919091016060019392505050565b60006020828403121562000a4c57600080fd5b815162000990816200095a565b8051801515811462000a6a57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121562000a9957600080fd5b62000aa48362000a59565b9150602083015167ffffffffffffffff8082111562000ac257600080fd5b818501915085601f83011262000ad757600080fd5b81518181111562000aec5762000aec62000a6f565b604051601f8201601f19908116603f0116810190838211818310171562000b175762000b1762000a6f565b8160405282815288602084870101111562000b3157600080fd5b62000b44836020830160208801620009d5565b80955050505050509250929050565b60006020828403121562000b6657600080fd5b620009908262000a59565b60006020828403121562000b8457600080fd5b505191905056fe60806040523480156200001157600080fd5b506040518060400160405280600b81526020016a2632b3b0b1bcaa37b5b2b760a91b815250604051806040016040528060038152602001621311d560ea1b815250816003908162000063919062000192565b50600462000072828262000192565b5050506200008f620000896200009560201b60201c565b62000099565b6200025e565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011657607f821691505b6020821081036200013757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018d576000816000526020600020601f850160051c81016020861015620001685750805b601f850160051c820191505b81811015620001895782815560010162000174565b5050505b505050565b81516001600160401b03811115620001ae57620001ae620000eb565b620001c681620001bf845462000101565b846200013d565b602080601f831160018114620001fe5760008415620001e55750858301515b600019600386901b1c1916600185901b17855562000189565b600085815260208120601f198616915b828110156200022f578886015182559484019460019091019084016200020e565b50858210156200024e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610c7d806200026e6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063a457c2d711610071578063a457c2d71461021e578063a9059cbb14610231578063c89e436114610244578063dd62ed3e14610257578063f2fde38b1461026a57600080fd5b806370a08231146101c0578063715018a6146101e95780638da5cb5b146101f157806395d89b411461021657600080fd5b806323b872dd116100de57806323b872dd14610178578063313ce5671461018b578063395093511461019a57806340c10f19146101ad57600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd146101515780631d2d840014610163575b600080fd5b61011861027d565b6040516101259190610a9c565b60405180910390f35b61014161013c366004610b00565b61030f565b6040519015158152602001610125565b6002545b604051908152602001610125565b610176610171366004610b2c565b610329565b005b610141610186366004610b50565b610353565b60405160128152602001610125565b6101416101a8366004610b00565b610377565b6101766101bb366004610b00565b610399565b6101556101ce366004610b2c565b6001600160a01b031660009081526020819052604090205490565b6101766103af565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610125565b6101186103c3565b61014161022c366004610b00565b6103d2565b61014161023f366004610b00565b610452565b6006546101fe906001600160a01b031681565b610155610265366004610b91565b6104f3565b610176610278366004610b2c565b61051e565b60606003805461028c90610bca565b80601f01602080910402602001604051908101604052809291908181526020018280546102b890610bca565b80156103055780601f106102da57610100808354040283529160200191610305565b820191906000526020600020905b8154815290600101906020018083116102e857829003601f168201915b5050505050905090565b60003361031d818585610597565b60019150505b92915050565b6103316106bb565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600033610361858285610715565b61036c85858561078f565b506001949350505050565b60003361031d81858561038a83836104f3565b6103949190610c04565b610597565b6103a16106bb565b6103ab828261095d565b5050565b6103b76106bb565b6103c16000610a3c565b565b60606004805461028c90610bca565b600033816103e082866104f3565b9050838110156104455760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61036c8286868403610597565b6006546000906001600160a01b03166104765761046f8383610a8e565b9050610323565b600654604051639cd1a12160e01b81526001600160a01b0385811660048301526024820185905233604483015290911690639cd1a121906064016020604051808303816000875af11580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046f9190610c25565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105266106bb565b6001600160a01b03811661058b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161043c565b61059481610a3c565b50565b6001600160a01b0383166105f95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161043c565b6001600160a01b03821661065a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161043c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b031633146103c15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161043c565b600061072184846104f3565b90506000198114610789578181101561077c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161043c565b6107898484848403610597565b50505050565b6001600160a01b0383166107f35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161043c565b6001600160a01b0382166108555760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161043c565b6001600160a01b038316600090815260208190526040902054818110156108cd5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161043c565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610904908490610c04565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161095091815260200190565b60405180910390a3610789565b6001600160a01b0382166109b35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161043c565b80600260008282546109c59190610c04565b90915550506001600160a01b038216600090815260208190526040812080548392906109f2908490610c04565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60003361031d81858561078f565b60006020808352835180602085015260005b81811015610aca57858101830151858201604001528201610aae565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461059457600080fd5b60008060408385031215610b1357600080fd5b8235610b1e81610aeb565b946020939093013593505050565b600060208284031215610b3e57600080fd5b8135610b4981610aeb565b9392505050565b600080600060608486031215610b6557600080fd5b8335610b7081610aeb565b92506020840135610b8081610aeb565b929592945050506040919091013590565b60008060408385031215610ba457600080fd5b8235610baf81610aeb565b91506020830135610bbf81610aeb565b809150509250929050565b600181811c90821680610bde57607f821691505b602082108103610bfe57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561032357634e487b7160e01b600052601160045260246000fd5b600060208284031215610c3757600080fd5b81518015158114610b4957600080fdfea264697066735822122072fa60ad479048bab3a0c98c1da73f98205d1aa96ef0fd834d67e70609072d8d64736f6c63430008160033608060405234801561001057600080fd5b50610379806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063087a43c11461005c5780639e1083ca146100715780639e927c68146100b7578063dc702fa0146100f4578063fa1fd28c14610122575b600080fd5b61006f61006a366004610237565b610135565b005b61009a61007f366004610237565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61006f6100c5366004610237565b33600090815260208190526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610114610102366004610237565b60016020526000908152604090205481565b6040519081526020016100ae565b61006f610130366004610259565b610183565b6001600160a01b038181166000908152602081905260409020541633146101595750565b336000908152600160208190526040822080549192909161017b9084906102dc565b909155505050565b6001600160a01b03838116600090815260208190526040902054166101a757505050565b6001600160a01b03808416600090815260208190526040908190205490516311055b5560e11b815291169063220ab6aa906101ea90869086908690600401610303565b600060405180830381600087803b15801561020457600080fd5b505af1925050508015610215575060015b50505050565b80356001600160a01b038116811461023257600080fd5b919050565b60006020828403121561024957600080fd5b6102528261021b565b9392505050565b60008060006040848603121561026e57600080fd5b6102778461021b565b9250602084013567ffffffffffffffff8082111561029457600080fd5b818601915086601f8301126102a857600080fd5b8135818111156102b757600080fd5b8760208285010111156102c957600080fd5b6020830194508093505050509250925092565b808201808211156102fd57634e487b7160e01b600052601160045260246000fd5b92915050565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f191601019291505056fea264697066735822122017084fdaeca9583f43b00082e3939082d85ffbe12ba02c38f14363592dd5465c64736f6c63430008160033608060405234801561001057600080fd5b506040516103b13803806103b183398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61031e806100936000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631be19560146100515780633234a197146100665780636f307dc314610095578063bdb2321f146100a8575b600080fd5b61006461005f366004610289565b6100bb565b005b600054610079906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600154610079906001600160a01b031681565b6100646100b6366004610289565b610208565b6001546001600160a01b039081169082160361011e5760405162461bcd60e51b815260206004820152601f60248201527f43616e2774207472616e7366657220756e6465726c79696e6720746f6b656e0060448201526064015b60405180910390fd5b6000546040516370a0823160e01b81523060048201526001600160a01b038381169263a9059cbb9291169083906370a0823190602401602060405180830381865afa158015610171573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019591906102ad565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156101e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020491906102c6565b5050565b6001546001600160a01b03161561024f5760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e481cd95d60aa1b6044820152606401610115565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116811461028657600080fd5b50565b60006020828403121561029b57600080fd5b81356102a681610271565b9392505050565b6000602082840312156102bf57600080fd5b5051919050565b6000602082840312156102d857600080fd5b815180151581146102a657600080fdfea2646970667358221220035e5ee73acab4d482e6649d562fa8fc706f6b651e4d63a2cabea33629cadc9d64736f6c6343000816003360806040523480156200001157600080fd5b50604051620012ad380380620012ad83398101604081905262000034916200028a565b6040518060400160405280601581526020017f446f75626c65456e747279506f696e74546f6b656e00000000000000000000008152506040518060400160405280600381526020016211115560ea1b81525081600390816200009791906200038d565b506004620000a682826200038d565b505050620000c3620000bd6200012a60201b60201c565b6200012e565b600880546001600160a01b038087166001600160a01b0319928316179092556009805485841690831617905560078054848416908316179055600680549286169290911682179055620001209068056bc75e2d6310000062000180565b5050505062000481565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001db5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001ef919062000459565b90915550506001600160a01b038216600090815260208190526040812080548392906200021e90849062000459565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b80516001600160a01b03811681146200028557600080fd5b919050565b60008060008060808587031215620002a157600080fd5b620002ac856200026d565b9350620002bc602086016200026d565b9250620002cc604086016200026d565b9150620002dc606086016200026d565b905092959194509250565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200031257607f821691505b6020821081036200033357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000268576000816000526020600020601f850160051c81016020861015620003645750805b601f850160051c820191505b81811015620003855782815560010162000370565b505050505050565b81516001600160401b03811115620003a957620003a9620002e7565b620003c181620003ba8454620002fd565b8462000339565b602080601f831160018114620003f95760008415620003e05750858301515b600019600386901b1c1916600185901b17855562000385565b600085815260208120601f198616915b828110156200042a5788860151825594840194600190910190840162000409565b5085821015620004495787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200047b57634e487b7160e01b600052601160045260246000fd5b92915050565b610e1c80620004916000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a9059cbb11610071578063a9059cbb1461025e578063d444d8a014610271578063d8670e1f14610284578063dd62ed3e14610297578063f2fde38b146102aa57600080fd5b8063715018a6146102155780638da5cb5b1461021f57806395d89b41146102305780639cd1a12114610238578063a457c2d71461024b57600080fd5b806326fe9951116100f457806326fe99511461018c578063313ce567146101b757806339509351146101c657806348db5f89146101d957806370a08231146101ec57600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e6102bd565b60405161013b9190610ba5565b60405180910390f35b610157610152366004610c09565b61034f565b604051901515815260200161013b565b6002545b60405190815260200161013b565b610157610187366004610c35565b610369565b60085461019f906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b6040516012815260200161013b565b6101576101d4366004610c09565b61038d565b60075461019f906001600160a01b031681565b61016b6101fa366004610c76565b6001600160a01b031660009081526020819052604090205490565b61021d6103af565b005b6005546001600160a01b031661019f565b61012e6103c3565b610157610246366004610c9a565b6103d2565b610157610259366004610c09565b610660565b61015761026c366004610c09565b6106db565b60065461019f906001600160a01b031681565b60095461019f906001600160a01b031681565b61016b6102a5366004610cdc565b6106e9565b61021d6102b8366004610c76565b610714565b6060600380546102cc90610d15565b80601f01602080910402602001604051908101604052809291908181526020018280546102f890610d15565b80156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b60003361035d81858561078d565b60019150505b92915050565b6000336103778582856108b1565b61038285858561092b565b506001949350505050565b60003361035d8185856103a083836106e9565b6103aa9190610d4f565b61078d565b6103b7610af9565b6103c16000610b53565b565b6060600480546102cc90610d15565b6008546000906001600160a01b0316331461042a5760405162461bcd60e51b8152602060048201526013602482015272139bdd081b1959d858de4818dbdb9d1c9858dd606a1b60448201526064015b60405180910390fd5b600954600754604051634f0841e560e11b81526001600160a01b0391821660048201526000929190911690639e1083ca90602401602060405180830381865afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f9190610d70565b6009546040516306e3817d60e51b81526001600160a01b0380841660048301529293506000929091169063dc702fa090602401602060405180830381865afa1580156104ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105139190610d8d565b600954600754604051633e87f4a360e21b81529293506001600160a01b039182169263fa1fd28c9261054e9216906000903690600401610da6565b600060405180830381600087803b15801561056857600080fd5b505af115801561057c573d6000803e3d6000fd5b5050505061058b84878761092b565b6009546040516306e3817d60e51b81526001600160a01b038481166004830152600195508392169063dc702fa090602401602060405180830381865afa1580156105d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fd9190610d8d565b11156106575760405162461bcd60e51b815260206004820152602360248201527f416c65727420686173206265656e207472696767657265642c20726576657274604482015262696e6760e81b6064820152608401610421565b50509392505050565b6000338161066e82866106e9565b9050838110156106ce5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610421565b610382828686840361078d565b60003361035d81858561092b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61071c610af9565b6001600160a01b0381166107815760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610421565b61078a81610b53565b50565b6001600160a01b0383166107ef5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610421565b6001600160a01b0382166108505760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610421565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006108bd84846106e9565b9050600019811461092557818110156109185760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610421565b610925848484840361078d565b50505050565b6001600160a01b03831661098f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610421565b6001600160a01b0382166109f15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610421565b6001600160a01b03831660009081526020819052604090205481811015610a695760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610421565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610aa0908490610d4f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610aec91815260200190565b60405180910390a3610925565b6005546001600160a01b031633146103c15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610421565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020808352835180602085015260005b81811015610bd357858101830151858201604001528201610bb7565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461078a57600080fd5b60008060408385031215610c1c57600080fd5b8235610c2781610bf4565b946020939093013593505050565b600080600060608486031215610c4a57600080fd5b8335610c5581610bf4565b92506020840135610c6581610bf4565b929592945050506040919091013590565b600060208284031215610c8857600080fd5b8135610c9381610bf4565b9392505050565b600080600060608486031215610caf57600080fd5b8335610cba81610bf4565b9250602084013591506040840135610cd181610bf4565b809150509250925092565b60008060408385031215610cef57600080fd5b8235610cfa81610bf4565b91506020830135610d0a81610bf4565b809150509250929050565b600181811c90821680610d2957607f821691505b602082108103610d4957634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561036357634e487b7160e01b600052601160045260246000fd5b600060208284031215610d8257600080fd5b8151610c9381610bf4565b600060208284031215610d9f57600080fd5b5051919050565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f191601019291505056fea264697066735822122069a323bfe9a86a8e0210b9a1004628d813ae9ccd8fa0eb4234b687d4cd7f119864736f6c63430008160033a2646970667358221220501465b025802ffe7aecccade9b6f614b1647022a00b040f055f58387420826d64736f6c63430008160033",
    "sourceMap": "120:1824:37:-:0;;;;;;;;;;;;-1:-1:-1;936:32:59;719:10:63;936:18:59;:32::i;:::-;120:1824:37;;2433:187:59;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:59;;;-1:-1:-1;;;;;;2541:17:59;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;120:1824:37:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106200005c5760003560e01c8063715018a614620000615780637726f776146200007b5780638da5cb5b14620000af578063d38def5b14620000cf578063f2fde38b1462000105578063fae99eae146200012a575b600080fd5b3480156200006e57600080fd5b50620000796200015f565b005b620000926200008c36600462000970565b62000177565b6040516001600160a01b0390911681526020015b60405180910390f35b348015620000bc57600080fd5b506000546001600160a01b031662000092565b348015620000dc57600080fd5b50620000f4620000ee36600462000997565b620003a6565b6040519015158152602001620000a6565b3480156200011257600080fd5b50620000796200012436600462000970565b62000600565b3480156200013757600080fd5b506200014f6200014936600462000997565b6200067f565b604051620000a6929190620009fb565b6200016962000876565b620001756000620008d2565b565b600080604051620001889062000922565b604051809103906000f080158015620001a5573d6000803e3d6000fd5b5090506000604051620001b89062000930565b604051809103906000f080158015620001d5573d6000803e3d6000fd5b509050600084604051620001e9906200093e565b6001600160a01b039091168152602001604051809103906000f08015801562000216573d6000803e3d6000fd5b5090506000838284886040516200022d906200094c565b6001600160a01b039485168152928416602084015290831660408301529091166060820152608001604051809103906000f08015801562000272573d6000803e3d6000fd5b5060405163bdb2321f60e01b81526001600160a01b0380831660048301529192509083169063bdb2321f90602401600060405180830381600087803b158015620002bb57600080fd5b505af1158015620002d0573d6000803e3d6000fd5b505060405162074b6160ea1b81526001600160a01b03848116600483015287169250631d2d84009150602401600060405180830381600087803b1580156200031757600080fd5b505af11580156200032c573d6000803e3d6000fd5b50506040516340c10f1960e01b81526001600160a01b03858116600483015268056bc75e2d631000006024830152871692506340c10f199150604401600060405180830381600087803b1580156200038357600080fd5b505af115801562000398573d6000803e3d6000fd5b509298975050505050505050565b6000808390506000816001600160a01b031663d8670e1f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620003ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000413919062000a39565b604051634f0841e560e11b81526001600160a01b038681166004830152919250600091831690639e1083ca90602401602060405180830381865afa15801562000460573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000486919062000a39565b90506001600160a01b038116620004a45760009350505050620005fa565b6000836001600160a01b031663d444d8a06040518163ffffffff1660e01b8152600401602060405180830381865afa158015620004e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200050b919062000a39565b604051637d74cf5760e11b81526001600160a01b0380831660048301528616602482015290915081906000908190309063fae99eae906044016000604051808303816000875af115801562000564573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200058e919081019062000a85565b915091508115620005d75760405162461bcd60e51b815260206004820152600e60248201526d14ddd9595c081cdd58d8d959195960921b60448201526064015b60405180910390fd5b600081806020019051810190620005ef919062000b53565b985050505050505050505b92915050565b6200060a62000876565b6001600160a01b038116620006715760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620005ce565b6200067c81620008d2565b50565b60006060836001600160a01b0316631be19560846001600160a01b03166326fe99516040518163ffffffff1660e01b8152600401602060405180830381865afa158015620006d1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006f7919062000a39565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200073957600080fd5b505af19250505080156200074b575060015b6200085a57600080846001600160a01b03166370a08231866001600160a01b031663d444d8a06040518163ffffffff1660e01b8152600401602060405180830381865afa158015620007a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007c7919062000a39565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200080c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000832919062000b71565b60408051929091116020830152015b604051602081830303815290604052915091506200086f565b60408051600060208201526001910162000841565b9250929050565b6000546001600160a01b03163314620001755760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620005ce565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610eeb8062000b8c83390190565b6103998062001a7783390190565b6103b18062001e1083390190565b6112ad80620021c183390190565b6001600160a01b03811681146200067c57600080fd5b6000602082840312156200098357600080fd5b813562000990816200095a565b9392505050565b60008060408385031215620009ab57600080fd5b8235620009b8816200095a565b91506020830135620009ca816200095a565b809150509250929050565b60005b83811015620009f2578181015183820152602001620009d8565b50506000910152565b8215158152604060208201526000825180604084015262000a24816060850160208701620009d5565b601f01601f1916919091016060019392505050565b60006020828403121562000a4c57600080fd5b815162000990816200095a565b8051801515811462000a6a57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121562000a9957600080fd5b62000aa48362000a59565b9150602083015167ffffffffffffffff8082111562000ac257600080fd5b818501915085601f83011262000ad757600080fd5b81518181111562000aec5762000aec62000a6f565b604051601f8201601f19908116603f0116810190838211818310171562000b175762000b1762000a6f565b8160405282815288602084870101111562000b3157600080fd5b62000b44836020830160208801620009d5565b80955050505050509250929050565b60006020828403121562000b6657600080fd5b620009908262000a59565b60006020828403121562000b8457600080fd5b505191905056fe60806040523480156200001157600080fd5b506040518060400160405280600b81526020016a2632b3b0b1bcaa37b5b2b760a91b815250604051806040016040528060038152602001621311d560ea1b815250816003908162000063919062000192565b50600462000072828262000192565b5050506200008f620000896200009560201b60201c565b62000099565b6200025e565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011657607f821691505b6020821081036200013757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018d576000816000526020600020601f850160051c81016020861015620001685750805b601f850160051c820191505b81811015620001895782815560010162000174565b5050505b505050565b81516001600160401b03811115620001ae57620001ae620000eb565b620001c681620001bf845462000101565b846200013d565b602080601f831160018114620001fe5760008415620001e55750858301515b600019600386901b1c1916600185901b17855562000189565b600085815260208120601f198616915b828110156200022f578886015182559484019460019091019084016200020e565b50858210156200024e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610c7d806200026e6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063a457c2d711610071578063a457c2d71461021e578063a9059cbb14610231578063c89e436114610244578063dd62ed3e14610257578063f2fde38b1461026a57600080fd5b806370a08231146101c0578063715018a6146101e95780638da5cb5b146101f157806395d89b411461021657600080fd5b806323b872dd116100de57806323b872dd14610178578063313ce5671461018b578063395093511461019a57806340c10f19146101ad57600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd146101515780631d2d840014610163575b600080fd5b61011861027d565b6040516101259190610a9c565b60405180910390f35b61014161013c366004610b00565b61030f565b6040519015158152602001610125565b6002545b604051908152602001610125565b610176610171366004610b2c565b610329565b005b610141610186366004610b50565b610353565b60405160128152602001610125565b6101416101a8366004610b00565b610377565b6101766101bb366004610b00565b610399565b6101556101ce366004610b2c565b6001600160a01b031660009081526020819052604090205490565b6101766103af565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610125565b6101186103c3565b61014161022c366004610b00565b6103d2565b61014161023f366004610b00565b610452565b6006546101fe906001600160a01b031681565b610155610265366004610b91565b6104f3565b610176610278366004610b2c565b61051e565b60606003805461028c90610bca565b80601f01602080910402602001604051908101604052809291908181526020018280546102b890610bca565b80156103055780601f106102da57610100808354040283529160200191610305565b820191906000526020600020905b8154815290600101906020018083116102e857829003601f168201915b5050505050905090565b60003361031d818585610597565b60019150505b92915050565b6103316106bb565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600033610361858285610715565b61036c85858561078f565b506001949350505050565b60003361031d81858561038a83836104f3565b6103949190610c04565b610597565b6103a16106bb565b6103ab828261095d565b5050565b6103b76106bb565b6103c16000610a3c565b565b60606004805461028c90610bca565b600033816103e082866104f3565b9050838110156104455760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61036c8286868403610597565b6006546000906001600160a01b03166104765761046f8383610a8e565b9050610323565b600654604051639cd1a12160e01b81526001600160a01b0385811660048301526024820185905233604483015290911690639cd1a121906064016020604051808303816000875af11580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046f9190610c25565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105266106bb565b6001600160a01b03811661058b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161043c565b61059481610a3c565b50565b6001600160a01b0383166105f95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161043c565b6001600160a01b03821661065a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161043c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b031633146103c15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161043c565b600061072184846104f3565b90506000198114610789578181101561077c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161043c565b6107898484848403610597565b50505050565b6001600160a01b0383166107f35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161043c565b6001600160a01b0382166108555760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161043c565b6001600160a01b038316600090815260208190526040902054818110156108cd5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161043c565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610904908490610c04565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161095091815260200190565b60405180910390a3610789565b6001600160a01b0382166109b35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161043c565b80600260008282546109c59190610c04565b90915550506001600160a01b038216600090815260208190526040812080548392906109f2908490610c04565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60003361031d81858561078f565b60006020808352835180602085015260005b81811015610aca57858101830151858201604001528201610aae565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461059457600080fd5b60008060408385031215610b1357600080fd5b8235610b1e81610aeb565b946020939093013593505050565b600060208284031215610b3e57600080fd5b8135610b4981610aeb565b9392505050565b600080600060608486031215610b6557600080fd5b8335610b7081610aeb565b92506020840135610b8081610aeb565b929592945050506040919091013590565b60008060408385031215610ba457600080fd5b8235610baf81610aeb565b91506020830135610bbf81610aeb565b809150509250929050565b600181811c90821680610bde57607f821691505b602082108103610bfe57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561032357634e487b7160e01b600052601160045260246000fd5b600060208284031215610c3757600080fd5b81518015158114610b4957600080fdfea264697066735822122072fa60ad479048bab3a0c98c1da73f98205d1aa96ef0fd834d67e70609072d8d64736f6c63430008160033608060405234801561001057600080fd5b50610379806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063087a43c11461005c5780639e1083ca146100715780639e927c68146100b7578063dc702fa0146100f4578063fa1fd28c14610122575b600080fd5b61006f61006a366004610237565b610135565b005b61009a61007f366004610237565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61006f6100c5366004610237565b33600090815260208190526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610114610102366004610237565b60016020526000908152604090205481565b6040519081526020016100ae565b61006f610130366004610259565b610183565b6001600160a01b038181166000908152602081905260409020541633146101595750565b336000908152600160208190526040822080549192909161017b9084906102dc565b909155505050565b6001600160a01b03838116600090815260208190526040902054166101a757505050565b6001600160a01b03808416600090815260208190526040908190205490516311055b5560e11b815291169063220ab6aa906101ea90869086908690600401610303565b600060405180830381600087803b15801561020457600080fd5b505af1925050508015610215575060015b50505050565b80356001600160a01b038116811461023257600080fd5b919050565b60006020828403121561024957600080fd5b6102528261021b565b9392505050565b60008060006040848603121561026e57600080fd5b6102778461021b565b9250602084013567ffffffffffffffff8082111561029457600080fd5b818601915086601f8301126102a857600080fd5b8135818111156102b757600080fd5b8760208285010111156102c957600080fd5b6020830194508093505050509250925092565b808201808211156102fd57634e487b7160e01b600052601160045260246000fd5b92915050565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f191601019291505056fea264697066735822122017084fdaeca9583f43b00082e3939082d85ffbe12ba02c38f14363592dd5465c64736f6c63430008160033608060405234801561001057600080fd5b506040516103b13803806103b183398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61031e806100936000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631be19560146100515780633234a197146100665780636f307dc314610095578063bdb2321f146100a8575b600080fd5b61006461005f366004610289565b6100bb565b005b600054610079906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600154610079906001600160a01b031681565b6100646100b6366004610289565b610208565b6001546001600160a01b039081169082160361011e5760405162461bcd60e51b815260206004820152601f60248201527f43616e2774207472616e7366657220756e6465726c79696e6720746f6b656e0060448201526064015b60405180910390fd5b6000546040516370a0823160e01b81523060048201526001600160a01b038381169263a9059cbb9291169083906370a0823190602401602060405180830381865afa158015610171573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019591906102ad565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156101e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020491906102c6565b5050565b6001546001600160a01b03161561024f5760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e481cd95d60aa1b6044820152606401610115565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116811461028657600080fd5b50565b60006020828403121561029b57600080fd5b81356102a681610271565b9392505050565b6000602082840312156102bf57600080fd5b5051919050565b6000602082840312156102d857600080fd5b815180151581146102a657600080fdfea2646970667358221220035e5ee73acab4d482e6649d562fa8fc706f6b651e4d63a2cabea33629cadc9d64736f6c6343000816003360806040523480156200001157600080fd5b50604051620012ad380380620012ad83398101604081905262000034916200028a565b6040518060400160405280601581526020017f446f75626c65456e747279506f696e74546f6b656e00000000000000000000008152506040518060400160405280600381526020016211115560ea1b81525081600390816200009791906200038d565b506004620000a682826200038d565b505050620000c3620000bd6200012a60201b60201c565b6200012e565b600880546001600160a01b038087166001600160a01b0319928316179092556009805485841690831617905560078054848416908316179055600680549286169290911682179055620001209068056bc75e2d6310000062000180565b5050505062000481565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001db5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001ef919062000459565b90915550506001600160a01b038216600090815260208190526040812080548392906200021e90849062000459565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b80516001600160a01b03811681146200028557600080fd5b919050565b60008060008060808587031215620002a157600080fd5b620002ac856200026d565b9350620002bc602086016200026d565b9250620002cc604086016200026d565b9150620002dc606086016200026d565b905092959194509250565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200031257607f821691505b6020821081036200033357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000268576000816000526020600020601f850160051c81016020861015620003645750805b601f850160051c820191505b81811015620003855782815560010162000370565b505050505050565b81516001600160401b03811115620003a957620003a9620002e7565b620003c181620003ba8454620002fd565b8462000339565b602080601f831160018114620003f95760008415620003e05750858301515b600019600386901b1c1916600185901b17855562000385565b600085815260208120601f198616915b828110156200042a5788860151825594840194600190910190840162000409565b5085821015620004495787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200047b57634e487b7160e01b600052601160045260246000fd5b92915050565b610e1c80620004916000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a9059cbb11610071578063a9059cbb1461025e578063d444d8a014610271578063d8670e1f14610284578063dd62ed3e14610297578063f2fde38b146102aa57600080fd5b8063715018a6146102155780638da5cb5b1461021f57806395d89b41146102305780639cd1a12114610238578063a457c2d71461024b57600080fd5b806326fe9951116100f457806326fe99511461018c578063313ce567146101b757806339509351146101c657806348db5f89146101d957806370a08231146101ec57600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e6102bd565b60405161013b9190610ba5565b60405180910390f35b610157610152366004610c09565b61034f565b604051901515815260200161013b565b6002545b60405190815260200161013b565b610157610187366004610c35565b610369565b60085461019f906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b6040516012815260200161013b565b6101576101d4366004610c09565b61038d565b60075461019f906001600160a01b031681565b61016b6101fa366004610c76565b6001600160a01b031660009081526020819052604090205490565b61021d6103af565b005b6005546001600160a01b031661019f565b61012e6103c3565b610157610246366004610c9a565b6103d2565b610157610259366004610c09565b610660565b61015761026c366004610c09565b6106db565b60065461019f906001600160a01b031681565b60095461019f906001600160a01b031681565b61016b6102a5366004610cdc565b6106e9565b61021d6102b8366004610c76565b610714565b6060600380546102cc90610d15565b80601f01602080910402602001604051908101604052809291908181526020018280546102f890610d15565b80156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b60003361035d81858561078d565b60019150505b92915050565b6000336103778582856108b1565b61038285858561092b565b506001949350505050565b60003361035d8185856103a083836106e9565b6103aa9190610d4f565b61078d565b6103b7610af9565b6103c16000610b53565b565b6060600480546102cc90610d15565b6008546000906001600160a01b0316331461042a5760405162461bcd60e51b8152602060048201526013602482015272139bdd081b1959d858de4818dbdb9d1c9858dd606a1b60448201526064015b60405180910390fd5b600954600754604051634f0841e560e11b81526001600160a01b0391821660048201526000929190911690639e1083ca90602401602060405180830381865afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f9190610d70565b6009546040516306e3817d60e51b81526001600160a01b0380841660048301529293506000929091169063dc702fa090602401602060405180830381865afa1580156104ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105139190610d8d565b600954600754604051633e87f4a360e21b81529293506001600160a01b039182169263fa1fd28c9261054e9216906000903690600401610da6565b600060405180830381600087803b15801561056857600080fd5b505af115801561057c573d6000803e3d6000fd5b5050505061058b84878761092b565b6009546040516306e3817d60e51b81526001600160a01b038481166004830152600195508392169063dc702fa090602401602060405180830381865afa1580156105d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fd9190610d8d565b11156106575760405162461bcd60e51b815260206004820152602360248201527f416c65727420686173206265656e207472696767657265642c20726576657274604482015262696e6760e81b6064820152608401610421565b50509392505050565b6000338161066e82866106e9565b9050838110156106ce5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610421565b610382828686840361078d565b60003361035d81858561092b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61071c610af9565b6001600160a01b0381166107815760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610421565b61078a81610b53565b50565b6001600160a01b0383166107ef5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610421565b6001600160a01b0382166108505760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610421565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006108bd84846106e9565b9050600019811461092557818110156109185760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610421565b610925848484840361078d565b50505050565b6001600160a01b03831661098f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610421565b6001600160a01b0382166109f15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610421565b6001600160a01b03831660009081526020819052604090205481811015610a695760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610421565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610aa0908490610d4f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610aec91815260200190565b60405180910390a3610925565b6005546001600160a01b031633146103c15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610421565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020808352835180602085015260005b81811015610bd357858101830151858201604001528201610bb7565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461078a57600080fd5b60008060408385031215610c1c57600080fd5b8235610c2781610bf4565b946020939093013593505050565b600080600060608486031215610c4a57600080fd5b8335610c5581610bf4565b92506020840135610c6581610bf4565b929592945050506040919091013590565b600060208284031215610c8857600080fd5b8135610c9381610bf4565b9392505050565b600080600060608486031215610caf57600080fd5b8335610cba81610bf4565b9250602084013591506040840135610cd181610bf4565b809150509250925092565b60008060408385031215610cef57600080fd5b8235610cfa81610bf4565b91506020830135610d0a81610bf4565b809150509250929050565b600181811c90821680610d2957607f821691505b602082108103610d4957634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561036357634e487b7160e01b600052601160045260246000fd5b600060208284031215610d8257600080fd5b8151610c9381610bf4565b600060208284031215610d9f57600080fd5b5051919050565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f191601019291505056fea264697066735822122069a323bfe9a86a8e0210b9a1004628d813ae9ccd8fa0eb4234b687d4cd7f119864736f6c63430008160033a2646970667358221220501465b025802ffe7aecccade9b6f614b1647022a00b040f055f58387420826d64736f6c63430008160033",
    "sourceMap": "120:1824:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:101:59;;;;;;;;;;;;;:::i;:::-;;167:777:37;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;566:32:67;;;548:51;;536:2;521:18;167:777:37;;;;;;;;1201:85:59;;;;;;;;;;-1:-1:-1;1247:7:59;1273:6;-1:-1:-1;;;;;1273:6:59;1201:85;;948:669:37;;;;;;;;;;-1:-1:-1;948:669:37;;;;;:::i;:::-;;:::i;:::-;;;1176:14:67;;1169:22;1151:41;;1139:2;1124:18;948:669:37;1011:187:67;2081:198:59;;;;;;;;;;-1:-1:-1;2081:198:59;;;;;:::i;:::-;;:::i;1621:321:37:-;;;;;;;;;;-1:-1:-1;1621:321:37;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1831:101:59:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;167:777:37:-;241:7;283:20;306:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;283:40;;364:11;378;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;364:25;;427:17;463:7;447:24;;;;;:::i;:::-;-1:-1:-1;;;;;566:32:67;;;548:51;;536:2;521:18;447:24:37;;;;;;;;;;;;;;;;;;;;;;;427:44;;504:25;561:8;580:5;596;604:7;532:80;;;;;:::i;:::-;-1:-1:-1;;;;;2663:15:67;;;2645:34;;2715:15;;;2710:2;2695:18;;2688:43;2767:15;;;2762:2;2747:18;;2740:43;2819:15;;;2814:2;2799:18;;2792:43;2594:3;2579:19;532:80:37;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;655:38:37;;-1:-1:-1;;;655:38:37;;-1:-1:-1;;;;;566:32:67;;;655:38:37;;;548:51:67;504:108:37;;-1:-1:-1;655:19:37;;;;;;521:18:67;;655:38:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;745:64:37;;-1:-1:-1;;;745:64:37;;-1:-1:-1;;;;;566:32:67;;;745:64:37;;;548:51:67;745:30:37;;;-1:-1:-1;745:30:37;;-1:-1:-1;521:18:67;;745:64:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;868:40:37;;-1:-1:-1;;;868:40:37;;-1:-1:-1;;;;;3296:32:67;;;868:40:37;;;3278:51:67;898:9:37;3345:18:67;;;3338:34;868:13:37;;;-1:-1:-1;868:13:37;;-1:-1:-1;3251:18:67;;868:40:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;930:8:37;;167:777;-1:-1:-1;;;;;;;;167:777:37:o;948:669::-;1043:4;1055:25;1100:9;1055:55;;1116:11;1130:8;-1:-1:-1;;;;;1130:14:37;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1246:33;;-1:-1:-1;;;1246:33:37;;-1:-1:-1;;;;;566:32:67;;;1246:33:37;;;548:51:67;1116:30:37;;-1:-1:-1;1210:25:37;;1246:24;;;;;521:18:67;;1246:33:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1210:70;-1:-1:-1;;;;;;1289:31:37;;1286:48;;1329:5;1322:12;;;;;;;1286:48;1341:13;1357:8;-1:-1:-1;;;;;1357:20:37;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1471:38;;-1:-1:-1;;;1471:38:37;;-1:-1:-1;;;;;4462:15:67;;;1471:38:37;;;4444:34:67;4514:15;;4494:18;;;4487:43;1341:38:37;;-1:-1:-1;1341:38:37;;1385:23;;;;1471:4;;:15;;4379:18:67;;1471:38:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1471:38:37;;;;;;;;;;;;:::i;:::-;1440:69;;;;1529:2;1528:3;1520:30;;;;-1:-1:-1;;;1520:30:37;;6024:2:67;1520:30:37;;;6006:21:67;6063:2;6043:18;;;6036:30;-1:-1:-1;;;6082:18:67;;;6075:44;6136:18;;1520:30:37;;;;;;;;;1557:10;1581:4;1570:24;;;;;;;;;;;;:::i;:::-;1557:37;-1:-1:-1;;;;;;;;;948:669:37;;;;;:::o;2081:198:59:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:59;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:59;;6574:2:67;2161:73:59::1;::::0;::::1;6556:21:67::0;6613:2;6593:18;;;6586:30;6652:34;6632:18;;;6625:62;-1:-1:-1;;;6703:18:67;;;6696:36;6749:19;;2161:73:59::1;6372:402:67::0;2161:73:59::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1621:321:37:-;1710:4;1716:12;1740:11;-1:-1:-1;;;;;1740:22:37;;1770:8;-1:-1:-1;;;;;1770:22:37;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1740:56;;-1:-1:-1;;;;;;1740:56:37;;;;;;;-1:-1:-1;;;;;566:32:67;;;1740:56:37;;;548:51:67;521:18;;1740:56:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1736:202;;1865:5;1928:1;1883:8;-1:-1:-1;;;;;1883:18:37;;1902:8;-1:-1:-1;;;;;1902:20:37;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1883:42;;-1:-1:-1;;;;;;1883:42:37;;;;;;;-1:-1:-1;;;;;566:32:67;;;1883:42:37;;;548:51:67;521:18;;1883:42:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1872:58;;;1883:46;;;;1872:58;;;1151:41:67;1124:18;1872:58:37;;;;;;;;;;;;;1858:73;;;;;;1736:202;1818:17;;;1829:5;1818:17;;;1151:41:67;1812:4:37;;1124:18:67;1818:17:37;1011:187:67;1736:202:37;1621:321;;;;;:::o;1359:130:59:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:59;719:10:63;1422:23:59;1414:68;;;;-1:-1:-1;;;1414:68:59;;7393:2:67;1414:68:59;;;7375:21:67;;;7412:18;;;7405:30;7471:34;7451:18;;;7444:62;7523:18;;1414:68:59;7191:356:67;2433:187:59;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:59;;;-1:-1:-1;;;;;;2541:17:59;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:131:67:-;-1:-1:-1;;;;;89:31:67;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:67:o;610:396::-;686:6;694;747:2;735:9;726:7;722:23;718:32;715:52;;;763:1;760;753:12;715:52;802:9;789:23;821:31;846:5;821:31;:::i;:::-;871:5;-1:-1:-1;928:2:67;913:18;;900:32;941:33;900:32;941:33;:::i;:::-;993:7;983:17;;;610:396;;;;;:::o;1641:250::-;1726:1;1736:113;1750:6;1747:1;1744:13;1736:113;;;1826:11;;;1820:18;1807:11;;;1800:39;1772:2;1765:10;1736:113;;;-1:-1:-1;;1883:1:67;1865:16;;1858:27;1641:250::o;1896:475::-;2079:6;2072:14;2065:22;2054:9;2047:41;2124:2;2119;2108:9;2104:18;2097:30;2028:4;2156:6;2150:13;2199:6;2194:2;2183:9;2179:18;2172:34;2215:79;2287:6;2282:2;2271:9;2267:18;2262:2;2254:6;2250:15;2215:79;:::i;:::-;2355:2;2334:15;-1:-1:-1;;2330:29:67;2315:45;;;;2362:2;2311:54;;1896:475;-1:-1:-1;;;1896:475:67:o;3383:265::-;3467:6;3520:2;3508:9;3499:7;3495:23;3491:32;3488:52;;;3536:1;3533;3526:12;3488:52;3568:9;3562:16;3587:31;3612:5;3587:31;:::i;4541:164::-;4617:13;;4666;;4659:21;4649:32;;4639:60;;4695:1;4692;4685:12;4639:60;4541:164;;;:::o;4710:127::-;4771:10;4766:3;4762:20;4759:1;4752:31;4802:4;4799:1;4792:15;4826:4;4823:1;4816:15;4842:975;4927:6;4935;4988:2;4976:9;4967:7;4963:23;4959:32;4956:52;;;5004:1;5001;4994:12;4956:52;5027:37;5054:9;5027:37;:::i;:::-;5017:47;;5108:2;5097:9;5093:18;5087:25;5131:18;5172:2;5164:6;5161:14;5158:34;;;5188:1;5185;5178:12;5158:34;5226:6;5215:9;5211:22;5201:32;;5271:7;5264:4;5260:2;5256:13;5252:27;5242:55;;5293:1;5290;5283:12;5242:55;5322:2;5316:9;5344:2;5340;5337:10;5334:36;;;5350:18;;:::i;:::-;5425:2;5419:9;5393:2;5479:13;;-1:-1:-1;;5475:22:67;;;5499:2;5471:31;5467:40;5455:53;;;5523:18;;;5543:22;;;5520:46;5517:72;;;5569:18;;:::i;:::-;5609:10;5605:2;5598:22;5644:2;5636:6;5629:18;5684:7;5679:2;5674;5670;5666:11;5662:20;5659:33;5656:53;;;5705:1;5702;5695:12;5656:53;5718:68;5783:2;5778;5770:6;5766:15;5761:2;5757;5753:11;5718:68;:::i;:::-;5805:6;5795:16;;;;;;;4842:975;;;;;:::o;6165:202::-;6232:6;6285:2;6273:9;6264:7;6260:23;6256:32;6253:52;;;6301:1;6298;6291:12;6253:52;6324:37;6351:9;6324:37;:::i;7002:184::-;7072:6;7125:2;7113:9;7104:7;7100:23;7096:32;7093:52;;;7141:1;7138;7131:12;7093:52;-1:-1:-1;7164:16:67;;7002:184;-1:-1:-1;7002:184:67:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "__trySweep(address,address)": "fae99eae",
    "createInstance(address)": "7726f776",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "validateInstance(address,address)": "d38def5b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract CryptoVault\",\"name\":\"cryptoVault\",\"type\":\"address\"},{\"internalType\":\"contract DoubleEntryPoint\",\"name\":\"instance\",\"type\":\"address\"}],\"name\":\"__trySweep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"createInstance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_instance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"validateInstance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ethernaut/contracts/levels/Level 26 - DoubleEntryPoint/DoubleEntryPointFactory.sol\":\"DoubleEntryPointFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-06/=node_modules/openzeppelin-contracts-06/\",\":openzeppelin-contracts-08/=node_modules/openzeppelin-contracts-08/\"]},\"sources\":{\"contracts/Ethernaut/contracts/levels/Level 26 - DoubleEntryPoint/DoubleEntryPoint.sol\":{\"keccak256\":\"0x0330423c9a10271d7b2d9222fa47a4609af1d4974766b572a2d79197da55c987\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40d167d3da5c99a3a9c50ffc56765c24d038e69974649703901c27b416bc13f9\",\"dweb:/ipfs/QmRVwy9JgT3fHuhhiHGGCgiKJBZjEDz1WMen5NWQfMTGQX\"]},\"contracts/Ethernaut/contracts/levels/Level 26 - DoubleEntryPoint/DoubleEntryPointFactory.sol\":{\"keccak256\":\"0x5e0c6af2b59b8550ac2d1dd2574506fed2ce8a1a7fbe2cd75866c8904eef190e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2799c401b75f6527315e18d5e0cad315ecffcd6aee178357076dce397151f07\",\"dweb:/ipfs/QmS5U7NGLiakmTVX8jZBp6RPsYc1C3cW6YAi2nv3sitkvs\"]},\"contracts/Ethernaut/contracts/levels/base/Level.sol\":{\"keccak256\":\"0xf72fa1516c1132cc8b82b818b4ccab66578a678813758e8c4bd9c4604a2e0273\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff29a9aaa170b5999773988b330b7d457362d3c265d019ed5e99f2347dd53560\",\"dweb:/ipfs/QmVs89EPUKY9pR852gusoh2cpwUjvDAoMgzwvjdpy8Gp9A\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.22+commit.4fc1097e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract CryptoVault",
              "name": "cryptoVault",
              "type": "address"
            },
            {
              "internalType": "contract DoubleEntryPoint",
              "name": "instance",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "__trySweep",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_player",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createInstance",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "_instance",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_player",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateInstance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ethereum-waffle/=node_modules/@ethereum-waffle/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-06/=node_modules/openzeppelin-contracts-06/",
        "openzeppelin-contracts-08/=node_modules/openzeppelin-contracts-08/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Ethernaut/contracts/levels/Level 26 - DoubleEntryPoint/DoubleEntryPointFactory.sol": "DoubleEntryPointFactory"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Ethernaut/contracts/levels/Level 26 - DoubleEntryPoint/DoubleEntryPoint.sol": {
        "keccak256": "0x0330423c9a10271d7b2d9222fa47a4609af1d4974766b572a2d79197da55c987",
        "urls": [
          "bzz-raw://40d167d3da5c99a3a9c50ffc56765c24d038e69974649703901c27b416bc13f9",
          "dweb:/ipfs/QmRVwy9JgT3fHuhhiHGGCgiKJBZjEDz1WMen5NWQfMTGQX"
        ],
        "license": "MIT"
      },
      "contracts/Ethernaut/contracts/levels/Level 26 - DoubleEntryPoint/DoubleEntryPointFactory.sol": {
        "keccak256": "0x5e0c6af2b59b8550ac2d1dd2574506fed2ce8a1a7fbe2cd75866c8904eef190e",
        "urls": [
          "bzz-raw://c2799c401b75f6527315e18d5e0cad315ecffcd6aee178357076dce397151f07",
          "dweb:/ipfs/QmS5U7NGLiakmTVX8jZBp6RPsYc1C3cW6YAi2nv3sitkvs"
        ],
        "license": "MIT"
      },
      "contracts/Ethernaut/contracts/levels/base/Level.sol": {
        "keccak256": "0xf72fa1516c1132cc8b82b818b4ccab66578a678813758e8c4bd9c4604a2e0273",
        "urls": [
          "bzz-raw://ff29a9aaa170b5999773988b330b7d457362d3c265d019ed5e99f2347dd53560",
          "dweb:/ipfs/QmVs89EPUKY9pR852gusoh2cpwUjvDAoMgzwvjdpy8Gp9A"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Ethernaut/contracts/levels/Level 26 - DoubleEntryPoint/DoubleEntryPointFactory.sol",
    "id": 4471,
    "exportedSymbols": {
      "Context": [
        6868
      ],
      "CryptoVault": [
        4035
      ],
      "DelegateERC20": [
        3853
      ],
      "DoubleEntryPoint": [
        4240
      ],
      "DoubleEntryPointFactory": [
        4470
      ],
      "ERC20": [
        6743
      ],
      "Forta": [
        3967
      ],
      "IDetectionBot": [
        3861
      ],
      "IERC20": [
        6821
      ],
      "IERC20Metadata": [
        6846
      ],
      "IForta": [
        3879
      ],
      "LegacyToken": [
        4110
      ],
      "Level": [
        6044
      ],
      "Ownable": [
        6157
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1912:37",
    "nodes": [
      {
        "id": 4242,
        "nodeType": "PragmaDirective",
        "src": "33:23:37",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 4243,
        "nodeType": "ImportDirective",
        "src": "58:32:37",
        "nodes": [],
        "absolutePath": "contracts/Ethernaut/contracts/levels/Level 26 - DoubleEntryPoint/DoubleEntryPoint.sol",
        "file": "./DoubleEntryPoint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4471,
        "sourceUnit": 4241,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4244,
        "nodeType": "ImportDirective",
        "src": "91:27:37",
        "nodes": [],
        "absolutePath": "contracts/Ethernaut/contracts/levels/base/Level.sol",
        "file": "../base/Level.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4471,
        "sourceUnit": 6045,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4470,
        "nodeType": "ContractDefinition",
        "src": "120:1824:37",
        "nodes": [
          {
            "id": 4336,
            "nodeType": "FunctionDefinition",
            "src": "167:777:37",
            "nodes": [],
            "body": {
              "id": 4335,
              "nodeType": "Block",
              "src": "250:694:37",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    4256
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4256,
                      "mutability": "mutable",
                      "name": "oldToken",
                      "nameLocation": "295:8:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 4335,
                      "src": "283:20:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LegacyToken_$4110",
                        "typeString": "contract LegacyToken"
                      },
                      "typeName": {
                        "id": 4255,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4254,
                          "name": "LegacyToken",
                          "nameLocations": [
                            "283:11:37"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4110,
                          "src": "283:11:37"
                        },
                        "referencedDeclaration": 4110,
                        "src": "283:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LegacyToken_$4110",
                          "typeString": "contract LegacyToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4261,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "306:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LegacyToken_$4110_$",
                        "typeString": "function () returns (contract LegacyToken)"
                      },
                      "typeName": {
                        "id": 4258,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4257,
                          "name": "LegacyToken",
                          "nameLocations": [
                            "310:11:37"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4110,
                          "src": "310:11:37"
                        },
                        "referencedDeclaration": 4110,
                        "src": "310:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LegacyToken_$4110",
                          "typeString": "contract LegacyToken"
                        }
                      }
                    },
                    "id": 4260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "306:17:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LegacyToken_$4110",
                      "typeString": "contract LegacyToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "283:40:37"
                },
                {
                  "assignments": [
                    4264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4264,
                      "mutability": "mutable",
                      "name": "forta",
                      "nameLocation": "370:5:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 4335,
                      "src": "364:11:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Forta_$3967",
                        "typeString": "contract Forta"
                      },
                      "typeName": {
                        "id": 4263,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4262,
                          "name": "Forta",
                          "nameLocations": [
                            "364:5:37"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3967,
                          "src": "364:5:37"
                        },
                        "referencedDeclaration": 3967,
                        "src": "364:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Forta_$3967",
                          "typeString": "contract Forta"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4269,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "378:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Forta_$3967_$",
                        "typeString": "function () returns (contract Forta)"
                      },
                      "typeName": {
                        "id": 4266,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4265,
                          "name": "Forta",
                          "nameLocations": [
                            "382:5:37"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3967,
                          "src": "382:5:37"
                        },
                        "referencedDeclaration": 3967,
                        "src": "382:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Forta_$3967",
                          "typeString": "contract Forta"
                        }
                      }
                    },
                    "id": 4268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "378:11:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Forta_$3967",
                      "typeString": "contract Forta"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "364:25:37"
                },
                {
                  "assignments": [
                    4272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4272,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "439:5:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 4335,
                      "src": "427:17:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CryptoVault_$4035",
                        "typeString": "contract CryptoVault"
                      },
                      "typeName": {
                        "id": 4271,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4270,
                          "name": "CryptoVault",
                          "nameLocations": [
                            "427:11:37"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4035,
                          "src": "427:11:37"
                        },
                        "referencedDeclaration": 4035,
                        "src": "427:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CryptoVault_$4035",
                          "typeString": "contract CryptoVault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4278,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4276,
                        "name": "_player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4248,
                        "src": "463:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "447:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_CryptoVault_$4035_$",
                        "typeString": "function (address) returns (contract CryptoVault)"
                      },
                      "typeName": {
                        "id": 4274,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4273,
                          "name": "CryptoVault",
                          "nameLocations": [
                            "451:11:37"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4035,
                          "src": "451:11:37"
                        },
                        "referencedDeclaration": 4035,
                        "src": "451:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CryptoVault_$4035",
                          "typeString": "contract CryptoVault"
                        }
                      }
                    },
                    "id": 4277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "447:24:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CryptoVault_$4035",
                      "typeString": "contract CryptoVault"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "427:44:37"
                },
                {
                  "assignments": [
                    4281
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4281,
                      "mutability": "mutable",
                      "name": "newToken",
                      "nameLocation": "521:8:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 4335,
                      "src": "504:25:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                        "typeString": "contract DoubleEntryPoint"
                      },
                      "typeName": {
                        "id": 4280,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4279,
                          "name": "DoubleEntryPoint",
                          "nameLocations": [
                            "504:16:37"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4240,
                          "src": "504:16:37"
                        },
                        "referencedDeclaration": 4240,
                        "src": "504:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                          "typeString": "contract DoubleEntryPoint"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4299,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4287,
                            "name": "oldToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4256,
                            "src": "561:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LegacyToken_$4110",
                              "typeString": "contract LegacyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LegacyToken_$4110",
                              "typeString": "contract LegacyToken"
                            }
                          ],
                          "id": 4286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "553:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4285,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "553:7:37",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "553:17:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4291,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4272,
                            "src": "580:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CryptoVault_$4035",
                              "typeString": "contract CryptoVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CryptoVault_$4035",
                              "typeString": "contract CryptoVault"
                            }
                          ],
                          "id": 4290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "572:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4289,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "572:7:37",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "572:14:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4295,
                            "name": "forta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4264,
                            "src": "596:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Forta_$3967",
                              "typeString": "contract Forta"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Forta_$3967",
                              "typeString": "contract Forta"
                            }
                          ],
                          "id": 4294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "588:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4293,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "588:7:37",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "588:14:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4297,
                        "name": "_player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4248,
                        "src": "604:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "532:20:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_DoubleEntryPoint_$4240_$",
                        "typeString": "function (address,address,address,address) returns (contract DoubleEntryPoint)"
                      },
                      "typeName": {
                        "id": 4283,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4282,
                          "name": "DoubleEntryPoint",
                          "nameLocations": [
                            "536:16:37"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4240,
                          "src": "536:16:37"
                        },
                        "referencedDeclaration": 4240,
                        "src": "536:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                          "typeString": "contract DoubleEntryPoint"
                        }
                      }
                    },
                    "id": 4298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "532:80:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                      "typeString": "contract DoubleEntryPoint"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "504:108:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4305,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4281,
                            "src": "683:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                              "typeString": "contract DoubleEntryPoint"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                              "typeString": "contract DoubleEntryPoint"
                            }
                          ],
                          "id": 4304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "675:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4303,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "675:7:37",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "675:17:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4300,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4272,
                        "src": "655:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CryptoVault_$4035",
                          "typeString": "contract CryptoVault"
                        }
                      },
                      "id": 4302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "661:13:37",
                      "memberName": "setUnderlying",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4007,
                      "src": "655:19:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "655:38:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4308,
                  "nodeType": "ExpressionStatement",
                  "src": "655:38:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 4315,
                                "name": "newToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4281,
                                "src": "798:8:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                                  "typeString": "contract DoubleEntryPoint"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                                  "typeString": "contract DoubleEntryPoint"
                                }
                              ],
                              "id": 4314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "790:7:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4313,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "790:7:37",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "790:17:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4312,
                          "name": "DelegateERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3853,
                          "src": "776:13:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DelegateERC20_$3853_$",
                            "typeString": "type(contract DelegateERC20)"
                          }
                        },
                        "id": 4317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "776:32:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DelegateERC20_$3853",
                          "typeString": "contract DelegateERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DelegateERC20_$3853",
                          "typeString": "contract DelegateERC20"
                        }
                      ],
                      "expression": {
                        "id": 4309,
                        "name": "oldToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4256,
                        "src": "745:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LegacyToken_$4110",
                          "typeString": "contract LegacyToken"
                        }
                      },
                      "id": 4311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "754:21:37",
                      "memberName": "delegateToNewContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4072,
                      "src": "745:30:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DelegateERC20_$3853_$returns$__$",
                        "typeString": "function (contract DelegateERC20) external"
                      }
                    },
                    "id": 4318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "745:64:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4319,
                  "nodeType": "ExpressionStatement",
                  "src": "745:64:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4325,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4272,
                            "src": "890:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CryptoVault_$4035",
                              "typeString": "contract CryptoVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CryptoVault_$4035",
                              "typeString": "contract CryptoVault"
                            }
                          ],
                          "id": 4324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "882:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4323,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "882:7:37",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "882:14:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 4327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "898:9:37",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 4320,
                        "name": "oldToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4256,
                        "src": "868:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LegacyToken_$4110",
                          "typeString": "contract LegacyToken"
                        }
                      },
                      "id": 4322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "877:4:37",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4059,
                      "src": "868:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "868:40:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4329,
                  "nodeType": "ExpressionStatement",
                  "src": "868:40:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4332,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4281,
                        "src": "930:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                          "typeString": "contract DoubleEntryPoint"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                          "typeString": "contract DoubleEntryPoint"
                        }
                      ],
                      "id": 4331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "922:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 4330,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "922:7:37",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "922:17:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4253,
                  "id": 4334,
                  "nodeType": "Return",
                  "src": "915:24:37"
                }
              ]
            },
            "baseFunctions": [
              6034
            ],
            "functionSelector": "7726f776",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createInstance",
            "nameLocation": "176:14:37",
            "overrides": {
              "id": 4250,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "208:8:37"
            },
            "parameters": {
              "id": 4249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4248,
                  "mutability": "mutable",
                  "name": "_player",
                  "nameLocation": "199:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 4336,
                  "src": "191:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "191:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "190:17:37"
            },
            "returnParameters": {
              "id": 4253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4252,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4336,
                  "src": "241:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "241:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "240:9:37"
            },
            "scope": 4470,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4421,
            "nodeType": "FunctionDefinition",
            "src": "948:669:37",
            "nodes": [],
            "body": {
              "id": 4420,
              "nodeType": "Block",
              "src": "1049:568:37",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    4348
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4348,
                      "mutability": "mutable",
                      "name": "instance",
                      "nameLocation": "1072:8:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 4420,
                      "src": "1055:25:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                        "typeString": "contract DoubleEntryPoint"
                      },
                      "typeName": {
                        "id": 4347,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4346,
                          "name": "DoubleEntryPoint",
                          "nameLocations": [
                            "1055:16:37"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4240,
                          "src": "1055:16:37"
                        },
                        "referencedDeclaration": 4240,
                        "src": "1055:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                          "typeString": "contract DoubleEntryPoint"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4352,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4350,
                        "name": "_instance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4338,
                        "src": "1100:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 4349,
                      "name": "DoubleEntryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4240,
                      "src": "1083:16:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_DoubleEntryPoint_$4240_$",
                        "typeString": "type(contract DoubleEntryPoint)"
                      }
                    },
                    "id": 4351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1083:27:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                      "typeString": "contract DoubleEntryPoint"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1055:55:37"
                },
                {
                  "assignments": [
                    4355
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4355,
                      "mutability": "mutable",
                      "name": "forta",
                      "nameLocation": "1122:5:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 4420,
                      "src": "1116:11:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Forta_$3967",
                        "typeString": "contract Forta"
                      },
                      "typeName": {
                        "id": 4354,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4353,
                          "name": "Forta",
                          "nameLocations": [
                            "1116:5:37"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3967,
                          "src": "1116:5:37"
                        },
                        "referencedDeclaration": 3967,
                        "src": "1116:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Forta_$3967",
                          "typeString": "contract Forta"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4359,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4356,
                        "name": "instance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4348,
                        "src": "1130:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                          "typeString": "contract DoubleEntryPoint"
                        }
                      },
                      "id": 4357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1139:5:37",
                      "memberName": "forta",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4127,
                      "src": "1130:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Forta_$3967_$",
                        "typeString": "function () view external returns (contract Forta)"
                      }
                    },
                    "id": 4358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1130:16:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Forta_$3967",
                      "typeString": "contract Forta"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1116:30:37"
                },
                {
                  "assignments": [
                    4361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4361,
                      "mutability": "mutable",
                      "name": "usersDetectionBot",
                      "nameLocation": "1218:17:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 4420,
                      "src": "1210:25:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4360,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1210:7:37",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4369,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4366,
                            "name": "_player",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4340,
                            "src": "1271:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4364,
                            "name": "forta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4355,
                            "src": "1246:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Forta_$3967",
                              "typeString": "contract Forta"
                            }
                          },
                          "id": 4365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1252:18:37",
                          "memberName": "usersDetectionBots",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3886,
                          "src": "1246:24:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_IDetectionBot_$3861_$",
                            "typeString": "function (address) view external returns (contract IDetectionBot)"
                          }
                        },
                        "id": 4367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1246:33:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDetectionBot_$3861",
                          "typeString": "contract IDetectionBot"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IDetectionBot_$3861",
                          "typeString": "contract IDetectionBot"
                        }
                      ],
                      "id": 4363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1238:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 4362,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1238:7:37",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1238:42:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1210:70:37"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4370,
                      "name": "usersDetectionBot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4361,
                      "src": "1289:17:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 4373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1318:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1310:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4371,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1310:7:37",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1310:10:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1289:31:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4378,
                  "nodeType": "IfStatement",
                  "src": "1286:48:37",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 4376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1329:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 4345,
                    "id": 4377,
                    "nodeType": "Return",
                    "src": "1322:12:37"
                  }
                },
                {
                  "assignments": [
                    4380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4380,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "1349:5:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 4420,
                      "src": "1341:13:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4379,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1341:7:37",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4384,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4381,
                        "name": "instance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4348,
                        "src": "1357:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                          "typeString": "contract DoubleEntryPoint"
                        }
                      },
                      "id": 4382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1366:11:37",
                      "memberName": "cryptoVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4120,
                      "src": "1357:20:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 4383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:22:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1341:38:37"
                },
                {
                  "assignments": [
                    4387
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4387,
                      "mutability": "mutable",
                      "name": "cryptoVault",
                      "nameLocation": "1397:11:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 4420,
                      "src": "1385:23:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CryptoVault_$4035",
                        "typeString": "contract CryptoVault"
                      },
                      "typeName": {
                        "id": 4386,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4385,
                          "name": "CryptoVault",
                          "nameLocations": [
                            "1385:11:37"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4035,
                          "src": "1385:11:37"
                        },
                        "referencedDeclaration": 4035,
                        "src": "1385:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CryptoVault_$4035",
                          "typeString": "contract CryptoVault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4391,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4389,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4380,
                        "src": "1423:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4388,
                      "name": "CryptoVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4035,
                      "src": "1411:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_CryptoVault_$4035_$",
                        "typeString": "type(contract CryptoVault)"
                      }
                    },
                    "id": 4390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1411:18:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CryptoVault_$4035",
                      "typeString": "contract CryptoVault"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1385:44:37"
                },
                {
                  "assignments": [
                    4393,
                    4395
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4393,
                      "mutability": "mutable",
                      "name": "ok",
                      "nameLocation": "1446:2:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 4420,
                      "src": "1441:7:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4392,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1441:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4395,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "1463:4:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 4420,
                      "src": "1450:17:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 4394,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1450:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4401,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4398,
                        "name": "cryptoVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4387,
                        "src": "1487:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CryptoVault_$4035",
                          "typeString": "contract CryptoVault"
                        }
                      },
                      {
                        "id": 4399,
                        "name": "instance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4348,
                        "src": "1500:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                          "typeString": "contract DoubleEntryPoint"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CryptoVault_$4035",
                          "typeString": "contract CryptoVault"
                        },
                        {
                          "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                          "typeString": "contract DoubleEntryPoint"
                        }
                      ],
                      "expression": {
                        "id": 4396,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1471:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DoubleEntryPointFactory_$4470",
                          "typeString": "contract DoubleEntryPointFactory"
                        }
                      },
                      "id": 4397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1476:10:37",
                      "memberName": "__trySweep",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4469,
                      "src": "1471:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_CryptoVault_$4035_$_t_contract$_DoubleEntryPoint_$4240_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (contract CryptoVault,contract DoubleEntryPoint) external returns (bool,bytes memory)"
                      }
                    },
                    "id": 4400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1471:38:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1440:69:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1528:3:37",
                        "subExpression": {
                          "id": 4403,
                          "name": "ok",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4393,
                          "src": "1529:2:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5377656570207375636365646564",
                        "id": 4405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1533:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a1d40bcccc39ea0e93ebb8d48ec037755b7fd27569abfe352113e7cc611fe68",
                          "typeString": "literal_string \"Sweep succeded\""
                        },
                        "value": "Sweep succeded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a1d40bcccc39ea0e93ebb8d48ec037755b7fd27569abfe352113e7cc611fe68",
                          "typeString": "literal_string \"Sweep succeded\""
                        }
                      ],
                      "id": 4402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1520:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1520:30:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4407,
                  "nodeType": "ExpressionStatement",
                  "src": "1520:30:37"
                },
                {
                  "assignments": [
                    4409
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4409,
                      "mutability": "mutable",
                      "name": "swept",
                      "nameLocation": "1562:5:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 4420,
                      "src": "1557:10:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4408,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1557:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4417,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4412,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "1581:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 4414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1588:4:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bool_$",
                              "typeString": "type(bool)"
                            },
                            "typeName": {
                              "id": 4413,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1588:4:37",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 4415,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1587:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bool_$",
                          "typeString": "type(bool)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_bool_$",
                          "typeString": "type(bool)"
                        }
                      ],
                      "expression": {
                        "id": 4410,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1570:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 4411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1574:6:37",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1570:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 4416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1570:24:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1557:37:37"
                },
                {
                  "expression": {
                    "id": 4418,
                    "name": "swept",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4409,
                    "src": "1607:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4345,
                  "id": 4419,
                  "nodeType": "Return",
                  "src": "1600:12:37"
                }
              ]
            },
            "baseFunctions": [
              6043
            ],
            "functionSelector": "d38def5b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateInstance",
            "nameLocation": "957:16:37",
            "overrides": {
              "id": 4342,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1018:8:37"
            },
            "parameters": {
              "id": 4341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4338,
                  "mutability": "mutable",
                  "name": "_instance",
                  "nameLocation": "990:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 4421,
                  "src": "974:25:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:15:37",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4340,
                  "mutability": "mutable",
                  "name": "_player",
                  "nameLocation": "1009:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 4421,
                  "src": "1001:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "973:44:37"
            },
            "returnParameters": {
              "id": 4345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4344,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4421,
                  "src": "1043:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4343,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1042:6:37"
            },
            "scope": 4470,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4469,
            "nodeType": "FunctionDefinition",
            "src": "1621:321:37",
            "nodes": [],
            "body": {
              "id": 4468,
              "nodeType": "Block",
              "src": "1730:212:37",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 4449,
                        "nodeType": "Block",
                        "src": "1797:46:37",
                        "statements": [
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 4442,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1812:4:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "66616c7365",
                                      "id": 4445,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1829:5:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "false"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "expression": {
                                      "id": 4443,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "1818:3:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 4444,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1822:6:37",
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "1818:10:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 4446,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1818:17:37",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "id": 4447,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1811:25:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "tuple(bool,bytes memory)"
                              }
                            },
                            "functionReturnParameters": 4433,
                            "id": 4448,
                            "nodeType": "Return",
                            "src": "1805:31:37"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 4450,
                      "nodeType": "TryCatchClause",
                      "src": "1797:46:37"
                    },
                    {
                      "block": {
                        "id": 4465,
                        "nodeType": "Block",
                        "src": "1850:88:37",
                        "statements": [
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "66616c7365",
                                  "id": 4451,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1865:5:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 4461,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "arguments": [],
                                            "expression": {
                                              "argumentTypes": [],
                                              "expression": {
                                                "id": 4456,
                                                "name": "instance",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4427,
                                                "src": "1902:8:37",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                                                  "typeString": "contract DoubleEntryPoint"
                                                }
                                              },
                                              "id": 4457,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "1911:11:37",
                                              "memberName": "cryptoVault",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 4120,
                                              "src": "1902:20:37",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                                "typeString": "function () view external returns (address)"
                                              }
                                            },
                                            "id": 4458,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1902:22:37",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "id": 4454,
                                            "name": "instance",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4427,
                                            "src": "1883:8:37",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                                              "typeString": "contract DoubleEntryPoint"
                                            }
                                          },
                                          "id": 4455,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "1892:9:37",
                                          "memberName": "balanceOf",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 6256,
                                          "src": "1883:18:37",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 4459,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1883:42:37",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 4460,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1928:1:37",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "1883:46:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "expression": {
                                      "id": 4452,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "1872:3:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 4453,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1876:6:37",
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "1872:10:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 4462,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1872:58:37",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "id": 4463,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1864:67:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "tuple(bool,bytes memory)"
                              }
                            },
                            "functionReturnParameters": 4433,
                            "id": 4464,
                            "nodeType": "Return",
                            "src": "1858:73:37"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 4466,
                      "nodeType": "TryCatchClause",
                      "src": "1844:94:37"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 4437,
                                "name": "instance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4427,
                                "src": "1770:8:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                                  "typeString": "contract DoubleEntryPoint"
                                }
                              },
                              "id": 4438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1779:13:37",
                              "memberName": "delegatedFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4124,
                              "src": "1770:22:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 4439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1770:24:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4436,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6821,
                          "src": "1763:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$6821_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1763:32:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6821",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$6821",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "expression": {
                        "id": 4434,
                        "name": "cryptoVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4424,
                        "src": "1740:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CryptoVault_$4035",
                          "typeString": "contract CryptoVault"
                        }
                      },
                      "id": 4435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1752:10:37",
                      "memberName": "sweepToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4034,
                      "src": "1740:22:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$6821_$returns$__$",
                        "typeString": "function (contract IERC20) external"
                      }
                    },
                    "id": 4441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1740:56:37",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4467,
                  "nodeType": "TryStatement",
                  "src": "1736:202:37"
                }
              ]
            },
            "functionSelector": "fae99eae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__trySweep",
            "nameLocation": "1630:10:37",
            "parameters": {
              "id": 4428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4424,
                  "mutability": "mutable",
                  "name": "cryptoVault",
                  "nameLocation": "1653:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 4469,
                  "src": "1641:23:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CryptoVault_$4035",
                    "typeString": "contract CryptoVault"
                  },
                  "typeName": {
                    "id": 4423,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4422,
                      "name": "CryptoVault",
                      "nameLocations": [
                        "1641:11:37"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4035,
                      "src": "1641:11:37"
                    },
                    "referencedDeclaration": 4035,
                    "src": "1641:11:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CryptoVault_$4035",
                      "typeString": "contract CryptoVault"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4427,
                  "mutability": "mutable",
                  "name": "instance",
                  "nameLocation": "1683:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 4469,
                  "src": "1666:25:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                    "typeString": "contract DoubleEntryPoint"
                  },
                  "typeName": {
                    "id": 4426,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4425,
                      "name": "DoubleEntryPoint",
                      "nameLocations": [
                        "1666:16:37"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4240,
                      "src": "1666:16:37"
                    },
                    "referencedDeclaration": 4240,
                    "src": "1666:16:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DoubleEntryPoint_$4240",
                      "typeString": "contract DoubleEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1640:52:37"
            },
            "returnParameters": {
              "id": 4433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4430,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4469,
                  "src": "1710:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4429,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4432,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4469,
                  "src": "1716:12:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4431,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1716:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1709:20:37"
            },
            "scope": 4470,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4245,
              "name": "Level",
              "nameLocations": [
                "156:5:37"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6044,
              "src": "156:5:37"
            },
            "id": 4246,
            "nodeType": "InheritanceSpecifier",
            "src": "156:5:37"
          }
        ],
        "canonicalName": "DoubleEntryPointFactory",
        "contractDependencies": [
          3967,
          4035,
          4110,
          4240
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4470,
          6044,
          6157,
          6868
        ],
        "name": "DoubleEntryPointFactory",
        "nameLocation": "129:23:37",
        "scope": 4471,
        "usedErrors": [],
        "usedEvents": [
          6058
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 37
}